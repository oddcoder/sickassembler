!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
ATOMIC_USIZE_INIT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/stable.rs	/^pub const ATOMIC_USIZE_INIT: AtomicUsize = AtomicUsize(atomic::ATOMIC_USIZE_INIT);$/;"	c
Alignment	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^pub enum Alignment {$/;"	g
AsmOperand	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^pub struct AsmOperand {$/;"	s
AssemblyDef	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^pub struct AssemblyDef {$/;"	s
AtomicElisionExt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/elision.rs	/^pub trait AtomicElisionExt {$/;"	t
AtomicUsize	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/stable.rs	/^pub struct AtomicUsize(atomic::AtomicUsize);$/;"	s
Attr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^pub enum Attr {$/;"	g
BIT_SIZE	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^const BIT_SIZE: usize = 32;$/;"	c
BLACK	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const BLACK: Color = 0;$/;"	c
BLOCK_SIZE	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^const BLOCK_SIZE: usize = 16;$/;"	c
BLUE	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const BLUE: Color = 4;$/;"	c
BRIGHT_BLACK	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const BRIGHT_BLACK: Color = 8;$/;"	c
BRIGHT_BLUE	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const BRIGHT_BLUE: Color = 12;$/;"	c
BRIGHT_CYAN	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const BRIGHT_CYAN: Color = 14;$/;"	c
BRIGHT_GREEN	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const BRIGHT_GREEN: Color = 10;$/;"	c
BRIGHT_MAGENTA	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const BRIGHT_MAGENTA: Color = 13;$/;"	c
BRIGHT_RED	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const BRIGHT_RED: Color = 9;$/;"	c
BRIGHT_WHITE	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const BRIGHT_WHITE: Color = 15;$/;"	c
BRIGHT_YELLOW	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const BRIGHT_YELLOW: Color = 11;$/;"	c
BYTE_FREQUENCIES	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/freqs.rs	/^pub const BYTE_FREQUENCIES: [u8; 256] = [$/;"	c
BYTE_SIZE_TO_BITS	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^const BYTE_SIZE_TO_BITS: u8 = 8; \/\/ In the SIC machine, a byte is 3 bits$/;"	c
BaseRange	/home/oddcoder/projects/sickassembler/src/lib/basic_types/base_table.rs	/^struct BaseRange {$/;"	s
Bits	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^type Bits = u32;$/;"	T
Bounded	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^pub struct Bounded<'a, 'm, 'r, 's, I> {$/;"	s
Byte	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^struct Byte(u16);$/;"	s
ByteClassSet	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^struct ByteClassSet([bool; 256]);$/;"	s
ByteInput	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^pub struct ByteInput<'t> {$/;"	s
CSV_S	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^		static CSV_S: &'static str = "ABC,DEFG,HIJKLMN\\n\\$/;"	c
CYAN	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const CYAN: Color = 6;$/;"	c
Cache	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^pub struct Cache {$/;"	s
Cache	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^pub struct Cache {$/;"	s
Cache	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^pub struct Cache {$/;"	s
CacheInner	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^struct CacheInner {$/;"	s
CaptureMatches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^pub struct CaptureMatches<'r, 't>(re_trait::CaptureMatches<'t, ExecNoSync<'r>>);$/;"	s
CaptureMatches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^pub struct CaptureMatches<'t, R>(Matches<'t, R>)$/;"	s
CaptureMatches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub struct CaptureMatches<'r, 't>(CaptureMatchesInner<'r, 't>);$/;"	s
CaptureMatchesInner	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^enum CaptureMatchesInner<'r, 't> {$/;"	g
CaptureNames	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^pub struct CaptureNames<'r>(::std::slice::Iter<'r, Option<String>>);$/;"	s
CaptureNames	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub struct CaptureNames<'r>(_CaptureNames<'r>);$/;"	s
CaptureRef	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/expand.rs	/^struct CaptureRef<'a> {$/;"	s
Captures	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^pub struct Captures<'t> {$/;"	s
Captures	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub struct Captures<'t> {$/;"	s
CapturesDebug	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^struct CapturesDebug<'c, 't: 'c>(&'c Captures<'t>);$/;"	s
CapturesDebug	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^struct CapturesDebug<'c, 't: 'c>(&'c Captures<'t>);$/;"	s
Cell	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^pub struct Cell {$/;"	s
Char	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^pub struct Char(u32);$/;"	s
CharInput	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^pub struct CharInput<'t>(&'t [u8]);$/;"	s
Color	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub type Color = u16;$/;"	T
ColumnIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^pub struct ColumnIter<'a>(std::slice::Iter<'a, Row>, usize);$/;"	s
ColumnIterMut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^pub struct ColumnIterMut<'a>(std::slice::IterMut<'a, Row>, usize);$/;"	s
ColumnPosition	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^pub enum ColumnPosition {$/;"	g
CompileClass	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^struct CompileClass<'a, 'b> {$/;"	s
Compiler	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^pub struct Compiler {$/;"	s
Condvar	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^pub struct Condvar {$/;"	s
CsectSymTab	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^struct CsectSymTab {$/;"	s
DEFAULT_CONTROL_SECTION	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    const DEFAULT_CONTROL_SECTION: &str = "";$/;"	c
DONE_BIT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^const DONE_BIT: U8 = 1;$/;"	c
Elem	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    type Elem = u8;$/;"	T
Elem	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    type Elem;$/;"	T
EmptyFlags	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^struct EmptyFlags {$/;"	s
EmptyLook	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^pub enum EmptyLook {$/;"	g
Err	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    type Err = ();$/;"	T
Err	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    type Err = Error;$/;"	T
Err	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    type Err = Error;$/;"	T
Error	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/error.rs	/^pub enum Error {$/;"	g
Error	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^pub enum Error {$/;"	g
Error	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^pub enum Error {$/;"	g
Error	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^pub enum Error {$/;"	g
Exec	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^pub struct Exec {$/;"	s
ExecBuilder	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^pub struct ExecBuilder {$/;"	s
ExecNoSync	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^pub struct ExecNoSync<'c> {$/;"	s
ExecNoSyncStr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^pub struct ExecNoSyncStr<'c>(ExecNoSync<'c>);$/;"	s
ExecReadOnly	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^struct ExecReadOnly {$/;"	s
FNV_PRIME	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^        const FNV_PRIME: u64 = 1099511628211;$/;"	c
Fail	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^pub enum Fail {$/;"	g
FailType	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^pub enum FailType {$/;"	g
FileHandler	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^pub struct FileHandler {$/;"	s
Filter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/regex.rs	/^pub struct Filter {$/;"	s
Filter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/string.rs	/^pub struct Filter {$/;"	s
Flags	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^struct Flags {$/;"	s
Flags	/home/oddcoder/projects/sickassembler/src/lib/basic_types/flags.rs	/^pub enum Flags {$/;"	g
FollowEpsilon	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^enum FollowEpsilon {$/;"	g
Foo	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^        struct Foo(Arc<AtomicUsize>);$/;"	s
Foo	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^        struct Foo(Arc<AtomicUsize>);$/;"	s
Format	/home/oddcoder/projects/sickassembler/src/lib/basic_types/formats.rs	/^pub enum Format {$/;"	g
FormatBuilder	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^pub struct FormatBuilder {$/;"	s
FormatOp	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^enum FormatOp {$/;"	g
FormatState	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^enum FormatState {$/;"	g
Fsm	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^pub struct Fsm<'a> {$/;"	s
Fsm	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^pub struct Fsm<'r, I> {$/;"	s
GREEN	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const GREEN: Color = 2;$/;"	c
HasArg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^pub enum HasArg {$/;"	g
Hole	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^enum Hole {$/;"	g
INITIALIZED	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^const INITIALIZED: usize = 2;$/;"	c
INITIALIZING	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^const INITIALIZING: usize = 1;$/;"	c
Input	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^pub trait Input {$/;"	t
InputAt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^pub struct InputAt {$/;"	s
Inst	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^pub enum Inst {$/;"	g
InstBytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^pub struct InstBytes {$/;"	s
InstChar	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^pub struct InstChar {$/;"	s
InstEmptyLook	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^pub struct InstEmptyLook {$/;"	s
InstHole	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^enum InstHole {$/;"	g
InstPtr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^type InstPtr = u32;$/;"	T
InstPtr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^pub type InstPtr = usize;$/;"	T
InstPtrs	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^struct InstPtrs<'a> {$/;"	s
InstRanges	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^pub struct InstRanges {$/;"	s
InstSave	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^pub struct InstSave {$/;"	s
InstSplit	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^pub struct InstSplit {$/;"	s
Instruction	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^pub struct Instruction {$/;"	s
IntType	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/elision.rs	/^    type IntType = usize;$/;"	T
IntType	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/elision.rs	/^    type IntType;$/;"	T
IntoIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	type IntoIter=Iter<'a, Row>;$/;"	T
IntoIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	type IntoIter=IterMut<'a, Row>;$/;"	T
IntoIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	type IntoIter=Iter<'a, Cell>;$/;"	T
IntoIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	type IntoIter=IterMut<'a, Cell>;$/;"	T
IntoIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    type IntoIter = slice::Iter<'a, Inst>;$/;"	T
IntoIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    type IntoIter = SetMatchesIntoIter;$/;"	T
IntoIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    type IntoIter = SetMatchesIter<'a>;$/;"	T
IntoIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^    type IntoIter = slice::Iter<'a, usize>;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	type Item = &'a Cell;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	type Item = &'a mut Cell;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	type Item=&'a Row;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	type Item=&'a mut Row;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	type Item=&'a Cell;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	type Item=&'a mut Cell;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    type Item = usize;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    type Item = &'a [u8];$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    type Item = &'a Inst;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    type Item = &'t [u8];$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    type Item = Captures<'t>;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    type Item = Match<'t>;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    type Item = Option<&'r str>;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    type Item = Option<Match<'t>>;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    type Item = usize;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    type Item = (usize, usize);$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    type Item = Locations;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    type Item = Option<(usize, usize)>;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    type Item = &'t str;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    type Item = (&'n str, usize);$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    type Item = Captures<'t>;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    type Item = Match<'t>;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    type Item = Option<&'r str>;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    type Item = Option<Match<'t>>;$/;"	T
Item	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^    type Item = &'a usize;$/;"	T
J	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^        const J: u32 = 1000;$/;"	c
Job	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^enum Job {$/;"	g
K	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^        const K: u32 = 3;$/;"	c
LOCKED_BIT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^const LOCKED_BIT: U8 = 4;$/;"	c
LOCKED_BIT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^const LOCKED_BIT: U8 = 1;$/;"	c
LOCKED_BIT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^const LOCKED_BIT: usize = 2;$/;"	c
LOCK_DURATION_MILLIS	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^const LOCK_DURATION_MILLIS: u64 = 50;$/;"	c
LOG_LEVEL_NAMES	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^static LOG_LEVEL_NAMES: [&'static str; 6] = ["OFF", "ERROR", "WARN", "INFO",$/;"	c
Lazy	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/core_lazy.rs	/^pub struct Lazy<T: Sync>(Once<T>);$/;"	s
Lazy	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lazy.rs	/^pub struct Lazy<T: Sync>(pub *const T, pub Once);$/;"	s
Lazy	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/nightly_lazy.rs	/^pub struct Lazy<T: Sync>(UnsafeCell<Option<T>>, Once);$/;"	s
LazyStatic	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^pub trait LazyStatic {$/;"	t
LengthLimit	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^enum LengthLimit {$/;"	g
LinePosition	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^pub enum LinePosition {$/;"	g
LineSeparator	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^pub struct LineSeparator {$/;"	s
Literal	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal.rs	/^pub struct Literal {$/;"	s
LiteralIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^pub enum LiteralIter<'a> {$/;"	g
LiteralSearcher	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^pub struct LiteralSearcher {$/;"	s
Locations	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^pub struct Locations(Vec<Slot>);$/;"	s
Log	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub trait Log: Sync+Send {$/;"	t
LogBuilder	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^pub struct LogBuilder {$/;"	s
LogDirective	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^struct LogDirective {$/;"	s
LogLevel	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub enum LogLevel {$/;"	g
LogLevelFilter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub enum LogLevelFilter {$/;"	g
LogLocation	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub struct LogLocation {$/;"	s
LogMetadata	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub struct LogMetadata<'a> {$/;"	s
LogRecord	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub struct LogRecord<'a> {$/;"	s
Logger	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^pub struct Logger {$/;"	s
LoggerGuard	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^struct LoggerGuard(&'static Log);$/;"	s
M	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^        const M: u32 = 1000;$/;"	c
MAGENTA	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const MAGENTA: Color = 5;$/;"	c
MAX_LOG_LEVEL_FILTER	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^static MAX_LOG_LEVEL_FILTER: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
MAX_SIZE_BYTES	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^const MAX_SIZE_BYTES: usize = 256 * (1 << 10); \/\/ 256 KB$/;"	c
MAX_TEDDY_LITERALS	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^            const MAX_TEDDY_LITERALS: usize = 32;$/;"	c
Mask	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^struct Mask {$/;"	s
Masks	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^struct Masks(Vec<Mask>);$/;"	s
MasterTable	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^pub struct MasterTable {$/;"	s
Match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^pub struct Match<'t> {$/;"	s
Match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub struct Match<'t> {$/;"	s
Match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^pub struct Match {$/;"	s
Match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_fallback/teddy128.rs	/^pub struct Match {$/;"	s
MatchLiteralType	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^enum MatchLiteralType {$/;"	g
MatchNfaType	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^enum MatchNfaType {$/;"	g
MatchType	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^enum MatchType {$/;"	g
Matcher	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^enum Matcher {$/;"	g
Matches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^pub struct Matches {$/;"	s
Matches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^pub struct Matches<'r, 't>(re_trait::Matches<'t, ExecNoSync<'r>>);$/;"	s
Matches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^pub struct Matches<'t, R> where R: RegularExpression, R::Text: 't {$/;"	s
Matches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub struct Matches<'r, 't>(MatchesInner<'r, 't>);$/;"	s
MatchesInner	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^enum MatchesInner<'r, 't> {$/;"	g
MaxLogLevelFilter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub struct MaxLogLevelFilter(());$/;"	s
MaybeInst	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^enum MaybeInst {$/;"	g
Mutex	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^pub struct Mutex<T: ?Sized> {$/;"	s
MutexGuard	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^pub struct MutexGuard<'a, T: ?Sized + 'a> {$/;"	s
MutexGuardRef	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/lib.rs	/^pub type MutexGuardRef<'a, T, U = T> = OwningRef<MutexGuard<'a, T>, U>;$/;"	T
N	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^        const N: usize = 10;$/;"	c
N	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^        const N: u32 = 10;$/;"	c
NEWLINE	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/utils.rs	/^pub static NEWLINE: &'static [u8] = b"\\n";$/;"	c
NEWLINE	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/utils.rs	/^pub static NEWLINE: &'static [u8] = b"\\r\\n";$/;"	c
Name	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^enum Name {$/;"	g
NamedGroups	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^enum NamedGroups {$/;"	g
NamedGroupsIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^enum NamedGroupsIter<'n> {$/;"	g
NoExpand	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^pub struct NoExpand<'t>(pub &'t [u8]);$/;"	s
NoExpand	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub struct NoExpand<'t>(pub &'t str);$/;"	s
NonCopy	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    struct NonCopy(i32);$/;"	s
NonCopy	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    struct NonCopy(i32);$/;"	s
NopLogger	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^struct NopLogger;$/;"	s
O	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^        static O: Once = ONCE_INIT;$/;"	c
ONCE_INIT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^pub const ONCE_INIT: Once = Once(ATOMIC_U8_INIT);$/;"	c
OP_CODE_LEN_F3_F4	/home/oddcoder/projects/sickassembler/src/lib/basic_types/flags.rs	/^const OP_CODE_LEN_F3_F4: u8 = 6; \/\/ Length of the opcode field in format 3\/4$/;"	c
Occur	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^pub enum Occur {$/;"	g
Once	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^pub struct Once(AtomicU8);$/;"	s
OnceState	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^pub enum OnceState {$/;"	g
OperandType	/home/oddcoder/projects/sickassembler/src/lib/basic_types/operands.rs	/^pub enum OperandType {$/;"	g
Opt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^struct Opt {$/;"	s
OptGroup	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^struct OptGroup {$/;"	s
Options	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^pub struct Options {$/;"	s
Optval	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^enum Optval {$/;"	g
Output	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	type Output = Row;$/;"	T
Output	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	type Output = TableSlice<'a>;$/;"	T
Output	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	type Output: 'a;$/;"	T
Output	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	type Output = Cell;$/;"	T
Output	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    type Output = [u8];$/;"	T
Output	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    type Output = str;$/;"	T
Output	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    type Output: Write;$/;"	T
Output	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    type Output = T;$/;"	T
Output	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    type Output = T;$/;"	T
PARKED_BIT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^const PARKED_BIT: U8 = 8;$/;"	c
PARKED_BIT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^const PARKED_BIT: U8 = 2;$/;"	c
PARKED_BIT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^const PARKED_BIT: usize = 1;$/;"	c
POISON_BIT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^const POISON_BIT: U8 = 2;$/;"	c
Packet	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    struct Packet<T>(Arc<(Mutex<T>, Condvar)>);$/;"	s
PanicGuard	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^        struct PanicGuard<'a>(&'a Condvar);$/;"	s
PanicGuard	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^        struct PanicGuard<'a>(&'a Once);$/;"	s
Param	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^pub enum Param {$/;"	g
Parsed	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^struct Parsed {$/;"	s
ParsingStyle	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^pub enum ParsingStyle {$/;"	g
Patch	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^struct Patch {$/;"	s
Plugin	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_plugin.rs	/^pub struct Plugin {$/;"	s
Program	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^pub struct Program {$/;"	s
ProgramCache	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^pub type ProgramCache = RefCell<ProgramCacheInner>;$/;"	T
ProgramCacheInner	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^pub struct ProgramCacheInner {$/;"	s
RED	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const RED: Color = 1;$/;"	c
REFCOUNT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^static REFCOUNT: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
RawMutex	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^pub struct RawMutex {$/;"	s
RawProgram	/home/oddcoder/projects/sickassembler/src/lib/htme/raw_program.rs	/^pub struct RawProgram {$/;"	s
RawReentrantMutex	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_remutex.rs	/^pub struct RawReentrantMutex {$/;"	s
RawRwLock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^pub struct RawRwLock {$/;"	s
ReentrantMutex	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^pub struct ReentrantMutex<T: ?Sized> {$/;"	s
ReentrantMutexGuard	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^pub struct ReentrantMutexGuard<'a, T: ?Sized + 'a> {$/;"	s
ReentrantMutexGuardRef	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/lib.rs	/^pub type ReentrantMutexGuardRef<'a, T, U = T> = OwningRef<ReentrantMutexGuard<'a, T>, U>;$/;"	T
Ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/expand.rs	/^enum Ref<'a> {$/;"	g
Regex	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^pub struct Regex(Exec);$/;"	s
Regex	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub struct Regex(#[doc(hidden)] pub _Regex);$/;"	s
RegexBuilder	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^pub struct RegexBuilder(RegexOptions);$/;"	s
RegexOptions	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^pub struct RegexOptions {$/;"	s
RegexSearcher	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pattern.rs	/^pub struct RegexSearcher<'r, 't> {$/;"	s
RegexSet	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^pub struct RegexSet(Exec);$/;"	s
RegexSetBuilder	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^pub struct RegexSetBuilder(RegexOptions);$/;"	s
Register	/home/oddcoder/projects/sickassembler/src/lib/basic_types/register.rs	/^pub enum Register {$/;"	g
RegularExpression	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^pub trait RegularExpression: Sized {$/;"	t
Replacer	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^pub trait Replacer {$/;"	t
Replacer	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub trait Replacer {$/;"	t
Result	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^pub type Result = result::Result<Matches, Fail>;$/;"	T
Result	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^type Result = result::Result<Patch, Error>;$/;"	T
Result	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^pub enum Result<T> {$/;"	g
Result	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^pub type Result<T> = std::result::Result<T, Error>;$/;"	T
Row	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^pub struct Row {$/;"	s
RwLock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^pub struct RwLock<T: ?Sized> {$/;"	s
RwLockReadGuard	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^pub struct RwLockReadGuard<'a, T: ?Sized + 'a> {$/;"	s
RwLockReadGuardRef	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/lib.rs	/^pub type RwLockReadGuardRef<'a, T, U = T> = OwningRef<RwLockReadGuard<'a, T>, U>;$/;"	T
RwLockWriteGuard	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^pub struct RwLockWriteGuard<'a, T: ?Sized + 'a> {$/;"	s
RwLockWriteGuardRef	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/lib.rs	/^pub type RwLockWriteGuardRef<'a, T, U = T> = OwningRef<RwLockWriteGuard<'a, T>, U>;$/;"	T
SHARED_COUNT_INC	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^const SHARED_COUNT_INC: usize = 4;$/;"	c
SHARED_COUNT_MASK	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^const SHARED_COUNT_MASK: usize = !3;$/;"	c
SHARED_COUNT_SHIFT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^const SHARED_COUNT_SHIFT: usize = 2;$/;"	c
STATE	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^static STATE: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
STATE_DEAD	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^const STATE_DEAD: StatePtr = STATE_UNKNOWN + 1;$/;"	c
STATE_MATCH	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^const STATE_MATCH: StatePtr = 1<<29;$/;"	c
STATE_MAX	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^const STATE_MAX: StatePtr = STATE_MATCH - 1;$/;"	c
STATE_QUIT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^const STATE_QUIT: StatePtr = STATE_DEAD + 1;$/;"	c
STATE_START	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^const STATE_START: StatePtr = 1<<30;$/;"	c
STATE_UNKNOWN	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^const STATE_UNKNOWN: StatePtr = 1<<31;$/;"	c
Searcher	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pattern.rs	/^    type Searcher = RegexSearcher<'r, 't>;$/;"	T
SetLoggerError	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub struct SetLoggerError(());$/;"	s
SetMatches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^pub struct SetMatches {$/;"	s
SetMatchesIntoIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^pub struct SetMatchesIntoIter(iter::Enumerate<vec::IntoIter<bool>>);$/;"	s
SetMatchesIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^pub struct SetMatchesIter<'a>(iter::Enumerate<slice::Iter<'a, bool>>);$/;"	s
ShutdownLoggerError	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub struct ShutdownLoggerError(());$/;"	s
SingleByteSet	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^struct SingleByteSet {$/;"	s
SingleSearch	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^pub struct SingleSearch {$/;"	s
Slice	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^pub trait Slice<'a, E> {$/;"	t
Slot	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^pub type Slot = Option<usize>;$/;"	T
SparseSet	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^pub struct SparseSet {$/;"	s
Split	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^pub struct Split<'r, 't> {$/;"	s
Split	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub struct Split<'r, 't> {$/;"	s
SplitN	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^pub struct SplitN<'r, 't> {$/;"	s
SplitN	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub struct SplitN<'r, 't> {$/;"	s
SplitWithinState	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^enum SplitWithinState {$/;"	g
State	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^struct State{$/;"	s
StateFlags	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^struct StateFlags(u8);$/;"	s
StatePtr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^type StatePtr = u32;$/;"	T
States	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^enum States {$/;"	g
StderrTerminal	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^pub type StderrTerminal = Terminal<Output = Stderr> + Send;$/;"	T
StdoutTerminal	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^pub type StdoutTerminal = Terminal<Output = Stdout> + Send;$/;"	T
StringWriter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/utils.rs	/^pub struct StringWriter {$/;"	s
SubCaptureMatches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^pub struct SubCaptureMatches<'c, 't: 'c> {$/;"	s
SubCaptureMatches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub struct SubCaptureMatches<'c, 't: 'c> {$/;"	s
SubCapturesPosIter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^pub struct SubCapturesPosIter<'c> {$/;"	s
SuffixCache	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^struct SuffixCache {$/;"	s
SuffixCacheEntry	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^struct SuffixCacheEntry {$/;"	s
SuffixCacheKey	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^struct SuffixCacheKey {$/;"	s
Symbol	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol.rs	/^pub struct Symbol {$/;"	s
SymbolType	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol.rs	/^pub enum SymbolType {$/;"	g
TAG_CONT	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^const TAG_CONT: u8 = 0b1000_0000;$/;"	c
TAG_FOUR	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^const TAG_FOUR: u8 = 0b1111_0000;$/;"	c
TAG_THREE	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^const TAG_THREE: u8 = 0b1110_0000;$/;"	c
TAG_TWO	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^const TAG_TWO: u8 = 0b1100_0000;$/;"	c
TOKEN_EXCLUSIVE	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^const TOKEN_EXCLUSIVE: ParkToken = ParkToken(1);$/;"	c
TOKEN_HANDOFF	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^pub const TOKEN_HANDOFF: UnparkToken = UnparkToken(1);$/;"	c
TOKEN_NORMAL	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^pub const TOKEN_NORMAL: UnparkToken = UnparkToken(0);$/;"	c
TOKEN_SHARED	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^const TOKEN_SHARED: ParkToken = ParkToken(0);$/;"	c
Table	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^pub struct Table {$/;"	s
TableFormat	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^pub struct TableFormat {$/;"	s
TableResult	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^pub struct TableResult {$/;"	s
TableSlice	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^pub struct TableSlice<'a> {$/;"	s
Target	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^            type Target = $T;$/;"	T
Target	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    type Target = Log;$/;"	T
Target	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    type Target = T;$/;"	T
Target	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    type Target = T;$/;"	T
Target	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    type Target = T;$/;"	T
Target	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    type Target = [u8];$/;"	T
Target	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    type Target = [Inst];$/;"	T
Target	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^    type Target = [usize];$/;"	T
Teddy	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^pub struct Teddy {$/;"	s
Teddy	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_fallback/teddy128.rs	/^pub struct Teddy(());$/;"	s
TermInfo	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^pub struct TermInfo {$/;"	s
Terminal	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^pub trait Terminal: Write {$/;"	t
TerminfoTerminal	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^pub struct TerminfoTerminal<T> {$/;"	s
Text	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    type Text = [u8];$/;"	T
Text	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    type Text = str;$/;"	T
Text	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_plugin.rs	/^    type Text = str;$/;"	T
Text	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    type Text: ?Sized;$/;"	T
Threads	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^struct Threads {$/;"	s
Transitions	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^struct Transitions {$/;"	s
TransitionsRow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^struct TransitionsRow<'a>(&'a [StatePtr]);$/;"	s
U8	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^type U8 = u8;$/;"	T
U8	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^type U8 = usize;$/;"	T
U8	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^type U8 = u8;$/;"	T
U8	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^type U8 = usize;$/;"	T
UNINITIALIZED	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^const UNINITIALIZED: usize = 0;$/;"	c
UncheckedOptionExt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/util.rs	/^pub trait UncheckedOptionExt<T> {$/;"	t
UnitOrPair	/home/oddcoder/projects/sickassembler/src/lib/basic_types/unit_or_pair.rs	/^pub enum UnitOrPair<T> {$/;"	g
UnsafeLoad	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^trait UnsafeLoad {$/;"	t
Unwinder	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^                struct Unwinder {$/;"	s
Unwinder	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^                struct Unwinder {$/;"	s
Value	/home/oddcoder/projects/sickassembler/src/lib/basic_types/operands.rs	/^pub enum Value {$/;"	g
Variables	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^pub struct Variables {$/;"	s
Void	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/util.rs	/^        enum Void {}$/;"	g
WHITE	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const WHITE: Color = 7;$/;"	c
WaitTimeoutResult	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^pub struct WaitTimeoutResult(bool);$/;"	s
Whitespace	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^enum Whitespace {$/;"	g
WinConsole	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^pub struct WinConsole<T> {$/;"	s
YELLOW	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    pub const YELLOW: Color = 3;$/;"	c
_CaptureNames	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^enum _CaptureNames<'r> {$/;"	g
_LOC	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/macros.rs	/^        static _LOC: $crate::LogLocation = $crate::LogLocation {$/;"	c
_Regex	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub enum _Regex {$/;"	g
__enabled	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub fn __enabled(level: LogLevel, target: &str) -> bool {$/;"	f
__lazy_static_create	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/core_lazy.rs	/^macro_rules! __lazy_static_create {$/;"	d
__lazy_static_create	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lazy.rs	/^macro_rules! __lazy_static_create {$/;"	d
__lazy_static_create	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/nightly_lazy.rs	/^macro_rules! __lazy_static_create {$/;"	d
__lazy_static_internal	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^macro_rules! __lazy_static_internal {$/;"	d
__log	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub fn __log(level: LogLevel, target: &str, loc: &LogLocation,$/;"	f
__print	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn __print<T: Write+?Sized, F>(&self, out: &mut T, f: F) -> Result<(), Error>$/;"	f
__print	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	fn __print<T:Write+?Sized, F>(&self, out: &mut T, format: &TableFormat, col_width: &[usize], f: F) -> Result<(), Error>$/;"	f
__stability	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^                    unsafe fn __stability() -> &'static $T {$/;"	f
__static_max_level	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub fn __static_max_level() -> LogLevelFilter {$/;"	f
__static_ref_initialize	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^                    fn __static_ref_initialize() -> $T { $e }$/;"	f
_find	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn _find(&self, haystack: &[u8]) -> Option<usize> {$/;"	f
_from_path	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn _from_path(path: &Path) -> Result<TermInfo> {$/;"	f
add	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn add(&mut self) -> Option<StatePtr> {$/;"	f
add	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^    fn add($/;"	f
add	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn add(&mut self, bucket: u8, byte: u8) {$/;"	f
add	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn add(&mut self, bucket: u8, pat: &[u8]) {$/;"	f
add_cell	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn add_cell(&mut self, cell: Cell) {$/;"	f
add_empty_row	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn add_empty_row(&mut self) -> &mut Row {$/;"	f
add_get_literal	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal_table.rs	/^fn add_get_literal() {$/;"	f
add_label	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn add_label(&mut self, label: String) -> Result<(), &str> {$/;"	f
add_operand	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    fn add_operand(&mut self, op: AsmOperand) -> Result<(), &str> {$/;"	f
add_reg_a	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn add_reg_a(&mut self) {$/;"	f
add_row	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn add_row(&mut self, row: Row) -> &mut Row {$/;"	f
add_state	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn add_state(&mut self, state: State) -> Option<StatePtr> {$/;"	f
add_step	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^    fn add_step($/;"	f
align	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	pub fn align(&mut self, align: Alignment) {$/;"	f
align_center	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	fn align_center() {$/;"	f
align_left	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	fn align_left() {$/;"	f
align_right	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	fn align_right() {$/;"	f
all_records	/home/oddcoder/projects/sickassembler/src/lib/htme/raw_program.rs	/^    pub fn all_records(&self) -> String {$/;"	f
apply	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn apply(&mut self) -> io::Result<()> {$/;"	f
apply_cap	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    pub fn apply_cap(&self, cmd: &str, params: &[Param], out: &mut io::Write) -> Result<()> {$/;"	f
approximate_size	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn approximate_size(&self) -> usize {$/;"	f
approximate_size	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn approximate_size(&self) -> usize {$/;"	f
approximate_size	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn approximate_size(&self) -> usize {$/;"	f
approximate_size	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    pub fn approximate_size(&self) -> usize {$/;"	f
approximate_size	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    pub fn approximate_size(&self) -> usize {$/;"	f
approximate_size	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_fallback/teddy128.rs	/^    pub fn approximate_size(&self) -> usize { 0 }$/;"	f
args	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn args(&self) -> &fmt::Arguments<'a> {$/;"	f
as_byte	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn as_byte(&self) -> Option<u8> {$/;"	f
as_bytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn as_bytes(&self) -> &[u8] { (**self).as_bytes() }$/;"	f
as_bytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn as_bytes(&self) -> &[u8];$/;"	f
as_bytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn as_bytes(&self) -> &'t [u8] {$/;"	f
as_char	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn as_char(self) -> Option<char> {$/;"	f
as_ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn as_ref(&self) -> &TableSlice<'a> {$/;"	f
as_slots	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^pub fn as_slots(locs: &mut Locations) -> &mut [Slot] {$/;"	f
as_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn as_str(&self) -> &'t str {$/;"	f
as_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_string	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/utils.rs	/^	pub fn as_string(&self) -> &str {$/;"	f
at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn at(&self, i: usize) -> InputAt { (**self).at(i) }$/;"	f
at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn at(&self, i: usize) -> InputAt {$/;"	f
at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn at(&self, i: usize) -> InputAt;$/;"	f
attr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn attr(&mut self, attr: Attr) -> Result<()>;$/;"	f
attr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn attr(&mut self, attr: Attr) -> Result<()> {$/;"	f
attr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn attr(&mut self, attr: Attr) -> Result<()> {$/;"	f
automatic	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn automatic(mut self) -> Self {$/;"	f
backtrack	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^    fn backtrack(&mut self, start: InputAt) -> bool {$/;"	f
bg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn bg(&mut self, color: color::Color) -> Result<()>;$/;"	f
bg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn bg(&mut self, color: color::Color) -> Result<()> {$/;"	f
bg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn bg(&mut self, color: color::Color) -> Result<()> {$/;"	f
bits_to_color	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^fn bits_to_color(bits: u16) -> color::Color {$/;"	f
boolfnames	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/names.rs	/^pub static boolfnames: &'static [&'static str] = &["auto_left_margin",$/;"	c
boolnames	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/names.rs	/^pub static boolnames: &'static [&'static str] =$/;"	c
borders	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn borders(&mut self, border: char) {$/;"	f
borders	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn borders(mut self, border: char) -> Self {$/;"	f
bounded_backtracking	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn bounded_backtracking(mut self) -> Self {$/;"	f
build	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    pub fn build(&mut self) -> Logger {$/;"	f
build	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn build(self) -> TableFormat {$/;"	f
build	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn build(self) -> Result<Exec, Error> {$/;"	f
build	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn build(&self) -> Result<Regex, Error> {$/;"	f
build	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn build(&self) -> Result<RegexSet, Error> {$/;"	f
byte	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn byte(b: u8) -> Self { Byte(b as u16) }$/;"	f
byte	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn byte(&self) -> Option<u8> {$/;"	f
byte_class	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn byte_class(&self, b: Byte) -> usize {$/;"	f
byte_classes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn byte_classes(&self) -> Vec<u8> {$/;"	f
byte_classes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn byte_classes() {$/;"	f
bytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    pub fn bytes(mut self, yes: bool) -> Self {$/;"	f
bytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn bytes(mut self, yes: bool) -> Self {$/;"	f
bytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/lib.rs	/^pub mod bytes {$/;"	m
c	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c(&mut self, expr: &Expr) -> Result {$/;"	f
c	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/expand.rs	/^    macro_rules! c {$/;"	d
c_alternate	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_alternate(&mut self, exprs: &[Expr]) -> Result {$/;"	f
c_byte	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_byte(&mut self, b: u8, casei: bool) -> Result {$/;"	f
c_bytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_bytes(&mut self, bytes: &[u8], casei: bool) -> Result {$/;"	f
c_capture	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_capture(&mut self, first_slot: usize, expr: &Expr) -> Result {$/;"	f
c_char	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_char(&mut self, c: char, casei: bool) -> Result {$/;"	f
c_class	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_class(&mut self, ranges: &[ClassRange]) -> Result {$/;"	f
c_class_bytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_class_bytes(&mut self, ranges: &[ByteRange]) -> Result {$/;"	f
c_concat	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_concat<'a, I>(&mut self, exprs: I) -> Result$/;"	f
c_dotstar	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_dotstar(&mut self) -> Result {$/;"	f
c_empty_look	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_empty_look(&mut self, look: EmptyLook) -> Result {$/;"	f
c_literal	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_literal(&mut self, chars: &[char], casei: bool) -> Result {$/;"	f
c_repeat	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_repeat($/;"	f
c_repeat_one_or_more	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_repeat_one_or_more($/;"	f
c_repeat_range	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_repeat_range($/;"	f
c_repeat_range_min_or_more	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_repeat_range_min_or_more($/;"	f
c_repeat_zero_or_more	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_repeat_zero_or_more($/;"	f
c_repeat_zero_or_one	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_repeat_zero_or_one($/;"	f
c_utf8_seq	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_utf8_seq(&mut self, seq: &Utf8Sequence) -> Result {$/;"	f
c_utf8_seq_	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn c_utf8_seq_<'r, I>(&mut self, seq: I) -> Result$/;"	f
cached_state	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn cached_state($/;"	f
cached_state_key	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn cached_state_key($/;"	f
call_once	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    pub fn call_once<F>(&self, f: F)$/;"	f
call_once_force	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    pub fn call_once_force<F>(&self, f: F)$/;"	f
call_once_slow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    fn call_once_slow(&self, ignore_poison: bool, f: &mut FnMut(OnceState)) {$/;"	f
can_exec	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^pub fn can_exec(insts: &Program) -> bool {$/;"	f
cap_for_attr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^fn cap_for_attr(attr: Attr) -> &'static str {$/;"	f
capacity	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
caps	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^    fn caps(&mut self, pc: usize) -> &mut [Option<usize>] {$/;"	f
capture_name_idx	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn capture_name_idx(&self) -> &Arc<HashMap<String, usize>> {$/;"	f
capture_names	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn capture_names(&self) -> &[Option<String>] {$/;"	f
capture_names	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn capture_names(&self) -> CaptureNames {$/;"	f
capture_names	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn capture_names(&self) -> CaptureNames {$/;"	f
captures	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn captures<'t>(&self, text: &'t [u8]) -> Option<Captures<'t>> {$/;"	f
captures	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn captures<'t>(&self, text: &'t str) -> Option<Captures<'t>> {$/;"	f
captures_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn captures_iter<'r, 't>($/;"	f
captures_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    fn captures_iter<'t>($/;"	f
captures_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn captures_iter<'r, 't>($/;"	f
captures_len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn captures_len(&self) -> usize {$/;"	f
captures_len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn captures_len(&self) -> usize {$/;"	f
captures_nfa	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn captures_nfa($/;"	f
captures_nfa_type	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn captures_nfa_type($/;"	f
captures_nfa_with_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn captures_nfa_with_match($/;"	f
carriage_return	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn carriage_return(&mut self) -> Result<()>;$/;"	f
carriage_return	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn carriage_return(&mut self) -> Result<()> {$/;"	f
carriage_return	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn carriage_return(&mut self) -> Result<()> {$/;"	f
case_insensitive	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn case_insensitive(&mut self, yes: bool) -> &mut RegexBuilder {$/;"	f
case_insensitive	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn case_insensitive(&mut self, yes: bool) -> &mut RegexSetBuilder {$/;"	f
cause	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/error.rs	/^    fn cause(&self) -> Option<&::std::error::Error> {$/;"	f
cause	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn cause(&self) -> Option<&std::error::Error> {$/;"	f
cause	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn cause(&self) -> Option<&::std::error::Error> {$/;"	f
cause	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn cause(&self) -> Option<&::std::error::Error> {$/;"	f
cell	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^macro_rules! cell {$/;"	d
char	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn char(&self) -> Char {$/;"	f
char_len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn char_len(&self) -> usize {$/;"	f
char_len_lossy	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^fn char_len_lossy(bytes: &[u8]) -> usize {$/;"	f
check_format	/home/oddcoder/projects/sickassembler/src/lib/basic_types/tests/instruction_set_tests.rs	/^    fn check_format() {$/;"	f
check_op_code	/home/oddcoder/projects/sickassembler/src/lib/basic_types/tests/instruction_set_tests.rs	/^    fn check_op_code() {$/;"	f
check_size	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn check_size(&self) -> result::Result<(), Error> {$/;"	f
check_str_operand	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^    fn check_str_operand(x: &str, v: &str) {$/;"	f
check_string_convert_to_vec	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^    fn check_string_convert_to_vec() {$/;"	f
check_var	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn check_var(expected_name: &str, expected_csect: &str, found: TableResult) {$/;"	f
choose_match_type	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn choose_match_type(&self, hint: Option<MatchType>) -> MatchType {$/;"	f
clean	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn clean() {$/;"	f
clear	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^    fn clear(&mut self) {$/;"	f
clear	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn clear(&mut self) {$/;"	f
clear	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn clear(&mut self) {$/;"	f
clear	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^    pub fn clear(&mut self) {$/;"	f
clear_cache	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn clear_cache(&mut self) -> bool {$/;"	f
clear_cache_and_save	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn clear_cache_and_save($/;"	f
clone	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn clone(&self) -> LogLevel {$/;"	f
clone	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn clone(&self) -> LogLevelFilter {$/;"	f
clone	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn clone(&self) -> Exec {$/;"	f
clone	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_plugin.rs	/^    fn clone(&self) -> Plugin {$/;"	f
clone	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol.rs	/^    fn clone(&self) -> Symbol {$/;"	f
cmp	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn cmp(&self, other: &LogLevel) -> cmp::Ordering {$/;"	f
cmp	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn cmp(&self, other: &LogLevelFilter) -> cmp::Ordering {$/;"	f
color	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^pub mod color {$/;"	m
color_to_bits	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^fn color_to_bits(color: color::Color) -> u16 {$/;"	f
column_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn column_iter(&self, column: usize) -> ColumnIter {$/;"	f
column_iter_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn column_iter_mut(&mut self, column: usize) -> ColumnIterMut {$/;"	f
column_separator	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn column_separator(&mut self, separator: char) {$/;"	f
column_separator	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn column_separator(mut self, separator: char) -> Self {$/;"	f
compare_exchange	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/stable.rs	/^    pub fn compare_exchange(&self,$/;"	f
compare_exchange_weak	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/stable.rs	/^    pub fn compare_exchange_weak(&self,$/;"	f
compile	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn compile(mut self) -> Result {$/;"	f
compile	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    pub fn compile($/;"	f
compile_finish	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn compile_finish(mut self) -> result::Result<Program, Error> {$/;"	f
compile_many	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn compile_many($/;"	f
compile_one	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn compile_one(mut self, expr: &Expr) -> result::Result<Program, Error> {$/;"	f
complete	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn complete(&self) -> bool {$/;"	f
conout	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^fn conout() -> io::Result<winapi::HANDLE> {$/;"	f
consts	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^pub mod consts {$/;"	m
consume_instruction	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^fn consume_instruction(instruction: &Instruction,$/;"	f
contains	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^    pub fn contains(&self, value: usize) -> bool {$/;"	f
continue_past_first_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn continue_past_first_match(&self) -> bool {$/;"	f
create_from_literal	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^fn create_from_literal(lit: &String, locctr: i32) -> Box<Instruction> {$/;"	f
create_instruction	/home/oddcoder/projects/sickassembler/src/lib/pass_two/translator.rs	/^    fn create_instruction(mnemonic: &str,$/;"	f
create_local_variable	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn create_local_variable<'a>(name: &'a str, csect: &'a str) -> (&'a str, &'a str) {$/;"	f
create_local_variable_with_addr	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn create_local_variable_with_addr(name: &str, addr: i32, csect: &str) -> (String, String) {$/;"	f
create_operand	/home/oddcoder/projects/sickassembler/src/lib/operand_parsing.rs	/^fn create_operand(t: OperandType, v: Value) -> AsmOperand {$/;"	f
csv	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	mod csv {$/;"	m
cursor_up	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn cursor_up(&mut self) -> Result<()>;$/;"	f
cursor_up	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn cursor_up(&mut self) -> Result<()> {$/;"	f
cursor_up	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn cursor_up(&mut self) -> Result<()> {$/;"	f
debug	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/macros.rs	/^macro_rules! debug {$/;"	d
decode_last_utf8	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^pub fn decode_last_utf8(src: &[u8]) -> Option<(char, usize)> {$/;"	f
decode_utf8	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^pub fn decode_utf8(src: &[u8]) -> Option<(char, usize)> {$/;"	f
default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    fn default() -> Condvar {$/;"	f
default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn default() -> Mutex<T> {$/;"	f
default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    fn default() -> Once {$/;"	f
default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    fn default() -> ReentrantMutex<T> {$/;"	f
default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn default() -> RwLock<T> {$/;"	f
default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	fn default() -> Cell {$/;"	f
default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	fn default() -> Self {$/;"	f
default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	fn default() -> Row {$/;"	f
default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    fn default() -> Self {$/;"	f
default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn default() -> Self {$/;"	f
define_builder	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^macro_rules! define_builder {$/;"	d
define_control_section	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^pub fn define_control_section(csect: &str) -> Result<(), String> {$/;"	f
define_csect	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn define_csect(&mut self, csect: &str) -> Result<(), String> {$/;"	f
define_export_symbol	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn define_export_symbol(&mut self, sym_name: &str, csect: &str) -> Result<(), String> {$/;"	f
define_exported_symbol	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^pub fn define_exported_symbol(sym_name: &str, csect: &str) -> Result<(), String> {$/;"	f
define_exported_symbols	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^pub fn define_exported_symbols(symbols: &Vec<String>, csect: &str) -> Result<(), String> {$/;"	f
define_import_symbol	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn define_import_symbol(&mut self, sym_name: &str, csect: &str) -> Result<(), String> {$/;"	f
define_imported_symbol	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^pub fn define_imported_symbol(sym_name: &str, csect: &str) -> Result<(), String> {$/;"	f
define_imported_symbols	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^pub fn define_imported_symbols(symbols: &Vec<String>, csect: &str) -> Result<(), String> {$/;"	f
define_local_symbol	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn define_local_symbol(&mut self,$/;"	f
define_local_symbol	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^pub fn define_local_symbol(sym_name: &str, addr: i32, csect: &str) -> Result<(), String> {$/;"	f
define_set	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^macro_rules! define_set {$/;"	d
define_set_builder	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^macro_rules! define_set_builder {$/;"	d
delete_line	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn delete_line(&mut self) -> Result<()>;$/;"	f
delete_line	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn delete_line(&mut self) -> Result<()> {$/;"	f
delete_line	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn delete_line(&mut self) -> Result<()> {$/;"	f
deref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^            fn deref<'a>(&'a self) -> &'a $T {$/;"	f
deref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn deref(&self) -> &(Log + 'static) {$/;"	f
deref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn deref(&self) -> &[u8] {$/;"	f
deref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
deref_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
description	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn description(&self) -> &str { "set_logger() called multiple times" }$/;"	f
description	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn description(&self) -> &str { "shutdown_logger() called without an active logger" }$/;"	f
description	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/error.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn description(&self) -> &str {$/;"	f
dfa	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    pub fn dfa(mut self, yes: bool) -> Self {$/;"	f
dfa_size_limit	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn dfa_size_limit(&mut self, limit: usize) -> &mut RegexBuilder {$/;"	f
dfa_size_limit	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn dfa_size_limit(&mut self, limit: usize) -> &mut RegexSetBuilder {$/;"	f
dim_if_necessary	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn dim_if_necessary(&self, color: color::Color) -> color::Color {$/;"	f
directive_table_check_negative	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^    fn directive_table_check_negative() {$/;"	f
directive_table_check_positive	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^    fn directive_table_check_positive() {$/;"	f
done	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    pub fn done(&self) -> bool {$/;"	f
dot_matches_new_line	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn dot_matches_new_line(&mut self, yes: bool) -> &mut RegexBuilder {$/;"	f
dot_matches_new_line	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn dot_matches_new_line(&mut self, yes: bool) -> &mut RegexSetBuilder {$/;"	f
double_end_base	/home/oddcoder/projects/sickassembler/src/lib/basic_types/base_table.rs	/^fn double_end_base() {$/;"	f
downgrade	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn downgrade(&self) {$/;"	f
downgrade	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn downgrade(self) -> RwLockReadGuard<'a, T> {$/;"	f
downgrade_slow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    fn downgrade_slow(&self) {$/;"	f
drop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^            fn drop(&mut self) {$/;"	f
drop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^                    fn drop(&mut self) {$/;"	f
drop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^            fn drop(&mut self) {$/;"	f
drop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^            fn drop(&mut self) {$/;"	f
drop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^                    fn drop(&mut self) {$/;"	f
drop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^            fn drop(&mut self) {$/;"	f
drop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn drop(&mut self) {$/;"	f
dummy	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^    pub fn dummy() -> AssemblyDef {$/;"	f
each_split_within	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^fn each_split_within<'a, F>(ss: &'a str, lim: usize, mut it: F)$/;"	f
elision_acquire	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/elision.rs	/^    fn elision_acquire(&self, _: usize, _: usize) -> Result<usize, usize> {$/;"	f
elision_acquire	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/elision.rs	/^    fn elision_acquire(&self, current: usize, new: usize) -> Result<usize, usize> {$/;"	f
elision_acquire	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/elision.rs	/^    fn elision_acquire(&self,$/;"	f
elision_release	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/elision.rs	/^    fn elision_release(&self, _: usize, _: usize) -> Result<usize, usize> {$/;"	f
elision_release	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/elision.rs	/^    fn elision_release(&self, current: usize, new: usize) -> Result<usize, usize> {$/;"	f
elision_release	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/elision.rs	/^    fn elision_release(&self,$/;"	f
empty	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn empty() -> Row {$/;"	f
empty	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn empty() -> SingleSearch {$/;"	f
empty	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn empty() -> Self {$/;"	f
enabled	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn enabled(&self, level: LogLevel, target: &str) -> bool {$/;"	f
enabled	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn enabled(&self, metadata: &LogMetadata) -> bool {$/;"	f
enabled	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn enabled(&self, _: &LogMetadata) -> bool { false }$/;"	f
enabled	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn enabled(&self, metadata: &LogMetadata) -> bool;$/;"	f
encode_utf8	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^pub fn encode_utf8(character: char, dst: &mut [u8]) -> Option<usize> {$/;"	f
end	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn end(&self) -> usize {$/;"	f
end	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn end(&self) -> usize {$/;"	f
end_base	/home/oddcoder/projects/sickassembler/src/lib/basic_types/base_table.rs	/^pub fn end_base(locctr: i32) {$/;"	f
end_record	/home/oddcoder/projects/sickassembler/src/lib/htme/raw_program.rs	/^    pub fn end_record(&self) -> String {$/;"	f
eof	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn eof() -> Self { Byte(256) }$/;"	f
eq	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn eq(&self, other: &LogLevel) -> bool {$/;"	f
eq	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn eq(&self, other: &LogLevelFilter) -> bool {$/;"	f
eq	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn eq(&self, other: &Char) -> bool { *self as u32 == other.0 }$/;"	f
eq	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn eq(&self, other: &char) -> bool { self.0 == *other as u32 }$/;"	f
eq	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn eq(&self, other: &Error) -> bool {$/;"	f
eq	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal.rs	/^    fn eq(&self, other: &Literal) -> bool {$/;"	f
eq	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol.rs	/^    fn eq(&self, other: &Symbol) -> bool {$/;"	f
eq_ignore_ascii_case	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^fn eq_ignore_ascii_case(a: &str, b: &str) -> bool {$/;"	f
equ_val	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^fn equ_val(instruction:&Instruction)->Result<i32, String>{$/;"	f
error	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/macros.rs	/^macro_rules! error {$/;"	d
escape	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^pub fn escape(text: &str) -> String {$/;"	f
escape_byte	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^        fn escape_byte(byte: u8) -> String {$/;"	f
escape_bytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^        fn escape_bytes(bytes: &[u8]) -> String {$/;"	f
exec	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^    pub fn exec($/;"	f
exec	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^    pub fn exec($/;"	f
exec_	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^    fn exec_(&mut self, mut at: InputAt) -> bool {$/;"	f
exec_	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^    fn exec_($/;"	f
exec_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn exec_at($/;"	f
exec_at_reverse	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn exec_at_reverse($/;"	f
exec_backtrack	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn exec_backtrack($/;"	f
exec_byte	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn exec_byte($/;"	f
exec_dfa_reverse_suffix	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn exec_dfa_reverse_suffix($/;"	f
exec_nfa	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn exec_nfa($/;"	f
exec_pikevm	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn exec_pikevm($/;"	f
expand	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn expand(&self, replacement: &[u8], dst: &mut Vec<u8>) {$/;"	f
expand	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn expand(&self, replacement: &str, dst: &mut String) {$/;"	f
expand	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^pub fn expand(cap: &[u8], params: &[Param], vars: &mut Variables) -> Result<Vec<u8>, Error> {$/;"	f
expand_bytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/expand.rs	/^pub fn expand_bytes($/;"	f
expand_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/expand.rs	/^pub fn expand_str($/;"	f
exports	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn exports(&self, sym_name: &str) -> bool {$/;"	f
f	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^        fn f(_x: usize) -> Vec<Optval> { return Vec::new(); }$/;"	f
fetch_add	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/stable.rs	/^    pub fn fetch_add(&self, val: usize, order: Ordering) -> usize {$/;"	f
fetch_and	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/stable.rs	/^    pub fn fetch_and(&self, val: usize, order: Ordering) -> usize {$/;"	f
fetch_directive	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^pub fn fetch_directive<'a>(instr_mnemonic: &str) -> Result<AssemblyDef, &'a str> {$/;"	f
fetch_instruction	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^pub fn fetch_instruction<'a>(instr_mnemonic: &String) -> Result<AssemblyDef, &'a str> {$/;"	f
fetch_or	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/stable.rs	/^    pub fn fetch_or(&self, val: usize, order: Ordering) -> usize {$/;"	f
fetch_sub	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/stable.rs	/^    pub fn fetch_sub(&self, val: usize, order: Ordering) -> usize {$/;"	f
fg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn fg(&mut self, color: color::Color) -> Result<()>;$/;"	f
fg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn fg(&mut self, color: color::Color) -> Result<()> {$/;"	f
fg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn fg(&mut self, color: color::Color) -> Result<()> {$/;"	f
file	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn file(&self) -> &str {$/;"	f
fill	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn fill(&mut self, goto: InstPtr) {$/;"	f
fill	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn fill(&mut self, hole: Hole, goto: InstPtr) {$/;"	f
fill	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn fill(&self, goto: InstPtr) -> Inst {$/;"	f
fill_align	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/utils.rs	/^	fn fill_align() {$/;"	f
fill_split	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn fill_split($/;"	f
fill_split	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn fill_split(&mut self, goto1: InstPtr, goto2: InstPtr) {$/;"	f
fill_to_next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn fill_to_next(&mut self, hole: Hole) {$/;"	f
filter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    pub fn filter(&mut self,$/;"	f
filter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    pub fn filter(&self) -> LogLevelFilter {$/;"	f
filter_beginning_longest_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn filter_beginning_longest_match() {$/;"	f
filter_info	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn filter_info() {$/;"	f
find	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/expand.rs	/^    macro_rules! find {$/;"	d
find	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn find(&self, text: &[u8]) -> Option<usize> {$/;"	f
find	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<(usize, usize)> {$/;"	f
find	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<usize> {$/;"	f
find	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn find<'t>(&self, text: &'t [u8]) -> Option<Match<'t>> {$/;"	f
find	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn find<'t>(&self, text: &'t str) -> Option<Match<'t>> {$/;"	f
find	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<Match> {$/;"	f
find	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_fallback/teddy128.rs	/^    pub fn find(&self, _haystack: &[u8]) -> Option<Match> { None }$/;"	f
find1	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn find1(&self, haystack: &[u8]) -> Option<Match> {$/;"	f
find2	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn find2(&self, haystack: &[u8]) -> Option<Match> {$/;"	f
find3	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn find3(&self, haystack: &[u8]) -> Option<Match> {$/;"	f
find_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn find_at(&self, text: &[u8], start: usize) -> Option<(usize, usize)> {$/;"	f
find_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn find_at(&self, text: &str, start: usize) -> Option<(usize, usize)> {$/;"	f
find_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn find_at<'t>($/;"	f
find_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_plugin.rs	/^    fn find_at(&self, text: &str, start: usize) -> Option<(usize, usize)> {$/;"	f
find_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    fn find_at($/;"	f
find_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn find_at<'t>($/;"	f
find_cap_ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/expand.rs	/^fn find_cap_ref<T: ?Sized + AsRef<[u8]>>($/;"	f
find_dfa_anchored_reverse	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn find_dfa_anchored_reverse($/;"	f
find_dfa_forward	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn find_dfa_forward($/;"	f
find_dfa_reverse_suffix	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn find_dfa_reverse_suffix($/;"	f
find_end	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn find_end(&self, haystack: &[u8]) -> Option<(usize, usize)> {$/;"	f
find_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn find_iter<'r, 't>(&'r self, text: &'t [u8]) -> Matches<'r, 't> {$/;"	f
find_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    fn find_iter<'t>($/;"	f
find_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn find_iter<'r, 't>(&'r self, text: &'t str) -> Matches<'r, 't> {$/;"	f
find_literals	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn find_literals($/;"	f
find_local	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn find_local(&self, sym_name: &str) -> Result<&Symbol, String> {$/;"	f
find_nfa	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn find_nfa($/;"	f
find_opt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^fn find_opt(opts: &[Opt], nm: Name) -> Option<usize> {$/;"	f
find_start	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn find_start(&self, haystack: &[u8]) -> Option<(usize, usize)> {$/;"	f
flag_resolution	/home/oddcoder/projects/sickassembler/src/lib/pass_two/tests.rs	/^    fn flag_resolution() {$/;"	f
flags	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn flags(&self) -> StateFlags {$/;"	f
flush	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/utils.rs	/^	fn flush(&mut self) -> Result<(), Error> {$/;"	f
flush	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush_literals	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^fn flush_literals(instructions: &mut Vec<Instruction>, start_loc: u32, current_csect: &str) -> i32 {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/regex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/string.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn fmt(&self, fmt: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {$/;"	f
fmt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {$/;"	f
fmt	/home/oddcoder/projects/sickassembler/src/lib/basic_types/flags.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/projects/sickassembler/src/lib/basic_types/formats.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/projects/sickassembler/src/lib/basic_types/operands.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/projects/sickassembler/src/lib/basic_types/unit_or_pair.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/oddcoder/projects/sickassembler/src/lib/htme/raw_program.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/core_lazy.rs	/^    pub const fn new() -> Self {$/;"	c
fn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/nightly_lazy.rs	/^    pub const fn new() -> Self {$/;"	c
fn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    pub const fn new() -> Condvar {$/;"	c
fn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub const fn new(val: T) -> Mutex<T> {$/;"	c
fn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    pub const fn new() -> Once {$/;"	c
fn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^    pub const fn new() -> RawMutex {$/;"	c
fn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_remutex.rs	/^    pub const fn new() -> RawReentrantMutex {$/;"	c
fn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub const fn new() -> RawRwLock {$/;"	c
fn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub const fn new(val: T) -> ReentrantMutex<T> {$/;"	c
fn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub const fn new(val: T) -> RwLock<T> {$/;"	c
follow_epsilons	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn follow_epsilons($/;"	f
format	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    pub fn format<F: 'static>(&mut self, format: F) -> &mut Self$/;"	f
format	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^fn format(val: Param, op: FormatOp, flags: Flags) -> Result<Vec<u8>, Error> {$/;"	f
format_3_base_relative	/home/oddcoder/projects/sickassembler/src/lib/basic_types/tests/instruction_tests.rs	/^    fn format_3_base_relative() {$/;"	f
format_3_pc_relative	/home/oddcoder/projects/sickassembler/src/lib/basic_types/tests/instruction_tests.rs	/^    fn format_3_pc_relative() {$/;"	f
format_4	/home/oddcoder/projects/sickassembler/src/lib/basic_types/tests/instruction_tests.rs	/^    fn format_4() {$/;"	f
format_option	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^fn format_option(opt: &OptGroup) -> String {$/;"	f
formatting_tests	/home/oddcoder/projects/sickassembler/src/lib/htme/tests/formatting_tests.rs	/^mod formatting_tests {$/;"	m
forward	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    pub fn forward($/;"	f
forward_many	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    pub fn forward_many($/;"	f
freq_rank	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^        fn freq_rank(b: u8) -> usize { BYTE_FREQUENCIES[b as usize] as usize }$/;"	f
frob	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn frob() {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	fn from(f: &T) -> Cell {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^		fn from() {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn from(it: T) -> Table {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	fn from(it: T) -> Row {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/error.rs	/^    fn from(err: syntax::Error) -> Error {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/expand.rs	/^    fn from(x: &'a str) -> Ref<'a> {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/expand.rs	/^    fn from(x: usize) -> Ref<'static> {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn from(c: Option<char>) -> Char {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn from(c: char) -> Char { Char(c as u32) }$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn from(exec: Exec) -> Regex {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    fn from(exec: Exec) -> Self {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn from(exec: Exec) -> Regex {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn from(err: Error) -> io::Error {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn from(val: io::Error) -> Self {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn from(val: terminfo::Error) -> Self {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn from(val: terminfo::parm::Error) -> Self {$/;"	f
from	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn from(v: ::std::string::FromUtf8Error) -> Self {$/;"	f
from_char	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn from_char(c: char) -> FormatOp {$/;"	f
from_csv	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn from_csv<R: Read>(reader: &mut csv::Reader<R>) -> Table {$/;"	f
from_csv_file	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn from_csv_file<P: AsRef<Path>>(csv_p: P) -> csv::Result<Table> {$/;"	f
from_csv_string	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn from_csv_string(csv_s: &str) -> csv::Result<Table> {$/;"	f
from_env	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    pub fn from_env() -> Result<TermInfo> {$/;"	f
from_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn from_iter<T>(iterator: T) -> Table where T: IntoIterator<Item=A> {$/;"	f
from_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	fn from_iter<T>(iterator: T) -> Row where T: IntoIterator<Item=A> {$/;"	f
from_name	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    pub fn from_name(name: &str) -> Result<TermInfo> {$/;"	f
from_path	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    pub fn from_path<P: AsRef<Path>>(path: P) -> Result<TermInfo> {$/;"	f
from_regex	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn from_regex(regex: &Regex) -> NamedGroups {$/;"	f
from_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn from_str(nm: &str) -> Name {$/;"	f
from_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn from_str(level: &str) -> Result<LogLevel, ()> {$/;"	f
from_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn from_str(level: &str) -> Result<LogLevelFilter, ()> {$/;"	f
from_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn from_str(s: &str) -> Result<Regex, Error> {$/;"	f
from_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn from_str(s: &str) -> Result<Regex, Error> {$/;"	f
from_usize	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn from_usize(u: usize) -> Option<LogLevel> {$/;"	f
from_usize	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn from_usize(u: usize) -> Option<LogLevelFilter> {$/;"	f
get	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/core_lazy.rs	/^    pub fn get<F>(&'static self, builder: F) -> &T$/;"	f
get	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lazy.rs	/^    pub fn get<F>(&'static mut self, f: F) -> &T$/;"	f
get	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/nightly_lazy.rs	/^    pub fn get<F>(&'static self, f: F) -> &T$/;"	f
get	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn get(&self) -> LogLevelFilter {$/;"	f
get	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn get(&mut self, key: SuffixCacheKey, pc: InstPtr) -> Option<InstPtr> {$/;"	f
get	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn get(&self, i: usize) -> Option<Match<'t>> {$/;"	f
get	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn get(&self, i: usize) -> Option<Match<'t>> {$/;"	f
get_address	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol.rs	/^    pub fn get_address(&self) -> i32 {$/;"	f
get_address	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    pub fn get_address(&self) -> i32 {$/;"	f
get_all_column_width	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn get_all_column_width(&self) -> Vec<usize> {$/;"	f
get_all_symbols	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn get_all_symbols(&self) -> HashSet<Symbol> {$/;"	f
get_all_symbols	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^pub fn get_all_symbols() -> HashSet<Symbol> {$/;"	f
get_all_symbols	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^pub fn get_all_symbols() -> HashSet<Symbol> {$/;"	f
get_base_at	/home/oddcoder/projects/sickassembler/src/lib/basic_types/base_table.rs	/^pub fn get_base_at(locctr: u32) -> Option<u32> {$/;"	f
get_bit_count	/home/oddcoder/projects/sickassembler/src/lib/basic_types/formats.rs	/^pub fn get_bit_count(format: Format) -> i32 {$/;"	f
get_cell	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn get_cell(&self, idx: usize) -> Option<&Cell> {$/;"	f
get_cell_width	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn get_cell_width(&self, column: usize) -> usize {$/;"	f
get_column_num	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn get_column_num(&self) -> usize {$/;"	f
get_column_separator	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn get_column_separator(&self, pos: ColumnPosition) -> Option<char> {$/;"	f
get_column_width	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn get_column_width(&self, col_idx: usize) -> usize {$/;"	f
get_content	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	fn get_content() {$/;"	f
get_content	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	pub fn get_content(&self) -> String {$/;"	f
get_control_section	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol.rs	/^    pub fn get_control_section(&self) -> String {$/;"	f
get_control_section	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    pub fn get_control_section(&self) -> String {$/;"	f
get_csect_table_read	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn get_csect_table_read(&self, csect: &str) -> &CsectSymTab {$/;"	f
get_csect_table_write	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn get_csect_table_write(&mut self, csect: &str) -> &mut CsectSymTab {$/;"	f
get_dbpath_for_term	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/searcher.rs	/^pub fn get_dbpath_for_term(term: &str) -> Option<PathBuf> {$/;"	f
get_def	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^fn get_def(inst: &mut String) -> Result<(AssemblyDef, bool, bool), String> {$/;"	f
get_disp	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^fn get_disp(instruction: &mut Instruction, sym_addr: i32) -> Result<String, String> {$/;"	f
get_first_operand	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn get_first_operand(&self) -> AsmOperand {$/;"	f
get_flags_value	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn get_flags_value(&self) -> Result<u32, String> {$/;"	f
get_format	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn get_format(&self) -> Format {$/;"	f
get_height	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	pub fn get_height(&self) -> usize {$/;"	f
get_height	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn get_height(&self) -> usize {$/;"	f
get_instruction_size	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^fn get_instruction_size(inst: &Instruction) -> i32 {$/;"	f
get_literal	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal_table.rs	/^pub fn get_literal(name: &str) -> Option<Literal> {$/;"	f
get_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn get_mut(&mut self) -> &mut Self::Output;$/;"	f
get_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn get_mut<'a>(&'a mut self) -> &'a mut T {$/;"	f
get_mut_cell	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn get_mut_cell(&mut self, idx: usize) -> Option<&mut Cell> {$/;"	f
get_mut_row	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn get_mut_row(&mut self, row: usize) -> Option<&mut Row> {$/;"	f
get_name	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol.rs	/^    pub fn get_name(&self) -> String {$/;"	f
get_name	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    pub fn get_name(&self) -> String {$/;"	f
get_opcode_value	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^    pub fn get_opcode_value(&self, format: Format) -> i32 {$/;"	f
get_padding	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn get_padding(&self) -> (usize, usize) {$/;"	f
get_ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn get_ref(&self) -> &Self::Output;$/;"	f
get_ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn get_ref(&self) -> &T {$/;"	f
get_ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn get_ref<'a>(&'a self) -> &'a T {$/;"	f
get_res	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^        fn get_res(fmt: &str,$/;"	f
get_row	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn get_row(&self, row: usize) -> Option<&Row> {$/;"	f
get_second_operand	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn get_second_operand(&self) -> AsmOperand {$/;"	f
get_sep_for_line	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	fn get_sep_for_line(&self, pos: LinePosition) -> &Option<LineSeparator> {$/;"	f
get_symbol	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^pub fn get_symbol(sym_name: &str, csect: &str) -> Result<TableResult, String> {$/;"	f
get_symbol_for_end	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^pub fn get_symbol_for_end(symbol: &str) -> Result<i32, String> {$/;"	f
get_thread_id	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_remutex.rs	/^fn get_thread_id() -> usize {$/;"	f
get_unresolved	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal_table.rs	/^pub fn get_unresolved() -> Vec<String> {$/;"	f
get_width	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	pub fn get_width(&self) -> usize {$/;"	f
guard_lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^pub fn guard_lock<'a, T: ?Sized>(guard: &MutexGuard<'a, T>) -> &'a RawMutex {$/;"	f
half_fill_split_goto1	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn half_fill_split_goto1(&mut self, goto1: InstPtr) {$/;"	f
half_fill_split_goto2	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn half_fill_split_goto2(&mut self, goto2: InstPtr) {$/;"	f
has_csect	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn has_csect(&self, csect: &str) -> bool {$/;"	f
has_empty	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn has_empty(&self) -> bool {$/;"	f
has_local	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn has_local(&self, sym_name: &str) -> bool {$/;"	f
has_prefix	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn has_prefix(&self) -> bool {$/;"	f
has_valid_operands	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^    pub fn has_valid_operands(&self, operands: &UnitOrPair<AsmOperand>) -> bool {$/;"	f
has_visited	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^    fn has_visited(&mut self, ip: InstPtr, at: InputAt) -> bool {$/;"	f
hash	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn hash(&self, suffix: &SuffixCacheKey) -> usize {$/;"	f
hash	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	f
have_elision	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/elision.rs	/^pub fn have_elision() -> bool {$/;"	f
haystack	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pattern.rs	/^    fn haystack(&self) -> &'t str {$/;"	f
header_record	/home/oddcoder/projects/sickassembler/src/lib/htme/raw_program.rs	/^    pub fn header_record(&self) -> String {$/;"	f
ignore_whitespace	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn ignore_whitespace(&mut self, yes: bool) -> &mut RegexBuilder {$/;"	f
ignore_whitespace	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn ignore_whitespace(&mut self, yes: bool) -> &mut RegexSetBuilder {$/;"	f
imports	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn imports(&self, sym_name: &str) -> bool {$/;"	f
inc	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^        fn inc(m: &Mutex<u32>) {$/;"	f
index	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn index(&self, idx: usize) -> &Self::Output {$/;"	f
index	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn index() {$/;"	f
index	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	fn index(&self, idx: usize) -> &Self::Output {$/;"	f
index	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn index(&self, i: usize) -> &[u8] {$/;"	f
index	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn index<'a>(&'a self, name: &'i str) -> &'a [u8] {$/;"	f
index	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn index(&self, i: usize) -> &str {$/;"	f
index	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn index<'a>(&'a self, name: &'i str) -> &'a str {$/;"	f
index_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn index_mut(&mut self, idx: usize) -> &mut Self::Output {$/;"	f
index_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	fn index_mut(&mut self, idx: usize) -> &mut Self::Output {$/;"	f
info	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/macros.rs	/^macro_rules! info {$/;"	d
init	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    pub fn init(&mut self) -> Result<(), SetLoggerError> {$/;"	f
init	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^pub fn init() -> Result<(), SetLoggerError> {$/;"	f
init	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn init(rows: Vec<Row>) -> Table {$/;"	f
initialize	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^            fn initialize(lazy: &Self) {$/;"	f
initialize	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^    fn initialize(lazy: &Self);$/;"	f
initialize	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^pub fn initialize<T: LazyStatic>(lazy: &T) {$/;"	f
insert	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^    pub fn insert(&mut self, value: usize) {$/;"	f
insert_cell	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn insert_cell(&mut self, index: usize, cell: Cell) {$/;"	f
insert_export_symbol	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn insert_export_symbol(&mut self, sym_name: &str) {$/;"	f
insert_import_symbol	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn insert_import_symbol(&mut self, sym_name: &str) {$/;"	f
insert_literal	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal_table.rs	/^pub fn insert_literal(literal: &String, address: u32) {$/;"	f
insert_local_symbol	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn insert_local_symbol(&mut self, sym: Symbol) {$/;"	f
insert_row	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn insert_row(&mut self, index: usize, row: Row) -> &mut Row {$/;"	f
insert_unresolved	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal_table.rs	/^pub fn insert_unresolved(literal_name: &str) {$/;"	f
inst_ptrs	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn inst_ptrs(&self) -> InstPtrs {$/;"	f
instuction_set_tests	/home/oddcoder/projects/sickassembler/src/lib/basic_types/tests/instruction_set_tests.rs	/^mod instuction_set_tests {$/;"	m
instuction_tests	/home/oddcoder/projects/sickassembler/src/lib/basic_types/tests/instruction_tests.rs	/^mod instuction_tests {$/;"	m
internal	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/lib.rs	/^pub mod internal {$/;"	m
into_byte_regex	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn into_byte_regex(self) -> re_bytes::Regex {$/;"	f
into_byte_regex_set	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn into_byte_regex_set(self) -> re_set::bytes::RegexSet {$/;"	f
into_inner	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn into_inner(self) -> Self::Output where Self: Sized;$/;"	f
into_inner	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn into_inner(self) -> T$/;"	f
into_inner	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn into_inner(self) -> T$/;"	f
into_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    fn into_iter(self) -> Self::IntoIter { self.iter() }$/;"	f
into_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^    fn into_iter(self) -> Self::IntoIter { self.iter() }$/;"	f
into_regex	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn into_regex(self) -> re_unicode::Regex {$/;"	f
into_regex_set	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn into_regex_set(self) -> re_set::unicode::RegexSet {$/;"	f
into_searcher	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pattern.rs	/^    fn into_searcher(self, haystack: &'t str) -> RegexSearcher<'r, 't> {$/;"	f
is_anchor_end_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn is_anchor_end_match(&self, text: &[u8]) -> bool {$/;"	f
is_arg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^fn is_arg(arg: &str) -> bool {$/;"	f
is_ascii_or_word_operand	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^pub fn is_ascii_or_word_operand(op: &str) -> bool {$/;"	f
is_ascii_word	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn is_ascii_word(&self) -> bool {$/;"	f
is_base_mode_directive	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^pub fn is_base_mode_directive(directive_mnemonic: &str) -> Option<String> {$/;"	f
is_decimal	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^pub fn is_decimal(op: &str) -> bool {$/;"	f
is_decodable_directive	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^pub fn is_decodable_directive(mnemonic: &str) -> bool {$/;"	f
is_directive	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^pub fn is_directive(mnemonic: &str) -> bool {$/;"	f
is_directive	/home/oddcoder/projects/sickassembler/src/lib/pass_two/translator.rs	/^fn is_directive(instr: &Instruction) -> bool {$/;"	f
is_empty	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn is_empty_match(&self, at: InputAt, empty: &InstEmptyLook) -> bool {$/;"	f
is_empty_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn is_empty_match(&self, at: InputAt, empty: &InstEmptyLook) -> bool;$/;"	f
is_end	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn is_end(&self) -> bool {$/;"	f
is_eof	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn is_eof(&self) -> bool { self.0 == 256 }$/;"	f
is_hex	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^pub fn is_hex(op: &str) -> bool {$/;"	f
is_instruction	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^pub fn is_instruction(mnemonic: &str) -> bool {$/;"	f
is_label	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^pub fn is_label(suspect: &str) -> bool {$/;"	f
is_literal	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal_table.rs	/^pub fn is_literal(st: &str) -> bool {$/;"	f
is_literal	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^pub fn is_literal(op: &str) -> bool {$/;"	f
is_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/regex.rs	/^    pub fn is_match(&self, s: &str) -> bool {$/;"	f
is_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/string.rs	/^    pub fn is_match(&self, s: &str) -> bool {$/;"	f
is_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn is_match(&self) -> bool {$/;"	f
is_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    pub fn is_match(&self) -> bool {$/;"	f
is_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    pub fn is_match(&self) -> bool {$/;"	f
is_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn is_match(&self, text: &[u8]) -> bool {$/;"	f
is_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    pub fn is_match(&self, text: $text_ty) -> bool {$/;"	f
is_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn is_match(&self, text: &str) -> bool {$/;"	f
is_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn is_match_at(&self, text: &[u8], start: usize) -> bool {$/;"	f
is_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn is_match_at(&self, text: &str, start: usize) -> bool {$/;"	f
is_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn is_match_at(&self, text: &[u8], start: usize) -> bool {$/;"	f
is_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_plugin.rs	/^    fn is_match_at(&self, text: &str, start: usize) -> bool {$/;"	f
is_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    pub fn is_match_at(&self, text: $text_ty, start: usize) -> bool {$/;"	f
is_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    fn is_match_at($/;"	f
is_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn is_match_at(&self, text: &str, start: usize) -> bool {$/;"	f
is_mutex	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    fn is_mutex() {$/;"	f
is_none	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn is_none(self) -> bool { self.0 == u32::MAX }$/;"	f
is_start	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn is_start(&self) -> bool {$/;"	f
is_start_byte	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^fn is_start_byte(b: u8) -> bool {$/;"	f
is_suffix	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn is_suffix(&self, text: &[u8]) -> bool {$/;"	f
is_teddy_128_available	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^pub fn is_teddy_128_available() -> bool {$/;"	f
is_teddy_128_available	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_fallback/teddy128.rs	/^pub fn is_teddy_128_available() -> bool {$/;"	f
is_valid_cap_letter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/expand.rs	/^fn is_valid_cap_letter(b: &u8) -> bool {$/;"	f
is_word	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn is_word(&self) -> bool {$/;"	f
is_word_byte	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn is_word_byte(self) -> bool {$/;"	f
is_word_char	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn is_word_char(self) -> bool {$/;"	f
iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^    pub fn iter<'a>(&'a self) -> Iter<'a, Cell> {$/;"	f
iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn iter(&self) -> LiteralIter {$/;"	f
iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn iter<'c>(&'c self) -> SubCaptureMatches<'c, 't> {$/;"	f
iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    pub fn iter(&self) -> SetMatchesIter {$/;"	f
iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    pub fn iter(&self) -> SubCapturesPosIter {$/;"	f
iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn iter<'n>(&'n self) -> NamedGroupsIter<'n> {$/;"	f
iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn iter<'c>(&'c self) -> SubCaptureMatches<'c, 't> {$/;"	f
iter_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^    pub fn iter_mut<'a>(&'a mut self) -> IterMut<'a, Cell> {$/;"	f
lazy_static	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^macro_rules! lazy_static {$/;"	d
lcp	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn lcp(&self) -> &SingleSearch {$/;"	f
lcs	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn lcs(&self) -> &SingleSearch {$/;"	f
leads_to_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    pub fn leads_to_match(&self, pc: usize) -> bool {$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn len(&self) -> usize {$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn len(&self) -> usize {$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn len(&self) -> usize { (**self).len() }$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn len(&self) -> usize;$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_fallback/teddy128.rs	/^    pub fn len(&self) -> usize { 0 }$/;"	f
len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^    pub fn len(&self) -> usize {$/;"	f
len_utf8	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn len_utf8(self) -> usize {$/;"	f
length_in_bytes	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal.rs	/^    pub fn length_in_bytes(&self) -> i32 {$/;"	f
level	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn level(&self) -> LogLevel {$/;"	f
line	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn line(&self) -> u32 {$/;"	f
load	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/stable.rs	/^    pub fn load(&self, order: Ordering) -> usize {$/;"	f
load_unchecked	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    unsafe fn load_unchecked(slice: &[Self::Elem], offset: usize) -> Self;$/;"	f
load_unchecked	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    unsafe fn load_unchecked(slice: &[u8], offset: usize) -> u8x16 {$/;"	f
location	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn location(&self) -> &LogLocation {$/;"	f
locations	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn locations(&self) -> Locations {$/;"	f
locations	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    fn locations(&self) -> Locations {$/;"	f
locations	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn locations(&self) -> Locations {$/;"	f
lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub fn lock(&self) -> MutexGuard<T> {$/;"	f
lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^    pub fn lock(&self) {$/;"	f
lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_remutex.rs	/^    pub fn lock(&self) {$/;"	f
lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub fn lock(&self) -> ReentrantMutexGuard<T> {$/;"	f
lock_exclusive	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn lock_exclusive(&self) {$/;"	f
lock_exclusive_slow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    fn lock_exclusive_slow(&self, timeout: Option<Instant>) -> bool {$/;"	f
lock_internal	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_remutex.rs	/^    fn lock_internal<F: FnOnce() -> bool>(&self, try_lock: F) -> bool {$/;"	f
lock_shared	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn lock_shared(&self) {$/;"	f
lock_shared_slow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    fn lock_shared_slow(&self, timeout: Option<Instant>) -> bool {$/;"	f
lock_slow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^    fn lock_slow(&self, timeout: Option<Instant>) -> bool {$/;"	f
log	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn log(&self, record: &LogRecord) {$/;"	f
log	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn log(&self, _: &LogRecord) {}$/;"	f
log	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn log(&self, record: &LogRecord);$/;"	f
log	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn log(info: &PanicInfo) {$/;"	f
log	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/macros.rs	/^macro_rules! log {$/;"	d
log_enabled	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/macros.rs	/^macro_rules! log_enabled {$/;"	d
log_panics	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub fn log_panics() {$/;"	f
logger	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^fn logger() -> Option<LoggerGuard> {$/;"	f
long_to_short	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn long_to_short(&self) -> Opt {$/;"	f
lots_and_lots	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn lots_and_lots() {$/;"	f
main	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^fn main() {$/;"	f
main	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/main.rs	/^fn main() {$/;"	f
main	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/lib.rs	/^fn main() {}$/;"	f
make_logger	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn make_logger(dirs: Vec<LogDirective>) -> Logger {$/;"	f
many_matches_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn many_matches_at($/;"	f
map	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    pub fn map<U, F: FnMut(T) -> U>(self, mut f: F) -> Result<U> {$/;"	f
mark_parked	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^    pub fn mark_parked(&self) {$/;"	f
mark_parked_if_locked	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^    pub fn mark_parked_if_locked(&self) -> bool {$/;"	f
mark_relative	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol.rs	/^    pub fn mark_relative(&mut self) {$/;"	f
match_beginning	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn match_beginning() {$/;"	f
match_beginning_longest_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn match_beginning_longest_match() {$/;"	f
match_default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn match_default() {$/;"	f
match_format	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^    pub fn match_format(&self, format: &Format) -> bool {$/;"	f
match_full_path	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn match_full_path() {$/;"	f
match_nfa	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn match_nfa($/;"	f
match_nfa_type	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn match_nfa_type($/;"	f
match_value	/home/oddcoder/projects/sickassembler/src/lib/basic_types/operands.rs	/^pub fn match_value(first: &OperandType, second: &Value) -> bool {$/;"	f
matched	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    pub fn matched(&self, regex_index: usize) -> bool {$/;"	f
matched_any	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    pub fn matched_any(&self) -> bool {$/;"	f
matches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    pub fn matches(&self, byte: u8) -> bool {$/;"	f
matches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    pub fn matches(&self, c: Char) -> bool {$/;"	f
matches	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    pub fn matches(&self, text: $text_ty) -> SetMatches {$/;"	f
max	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn max() -> LogLevel {$/;"	f
max	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn max() -> LogLevelFilter {$/;"	f
max_log_level	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub fn max_log_level() -> LogLevelFilter {$/;"	f
members1	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn members1(&self, haystack_block: u8x16) -> u8x16 {$/;"	f
members2	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn members2(&self, haystack_block: u8x16) -> (u8x16, u8x16) {$/;"	f
members3	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn members3(&self, haystack_block: u8x16) -> (u8x16, u8x16, u8x16) {$/;"	f
metadata	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn metadata(&self) -> &LogMetadata {$/;"	f
min_hexa_digits_required	/home/oddcoder/projects/sickassembler/src/lib/htme/record_string.rs	/^pub fn min_hexa_digits_required(code: u32) -> u32 {$/;"	f
modification_records	/home/oddcoder/projects/sickassembler/src/lib/htme/raw_program.rs	/^    pub fn modification_records(&self) -> String {$/;"	f
module_path	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn module_path(&self) -> &str {$/;"	f
msys_terminfo	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/compiled.rs	/^pub fn msys_terminfo() -> TermInfo {$/;"	f
multi_line	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn multi_line(&mut self, yes: bool) -> &mut RegexBuilder {$/;"	f
multi_line	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn multi_line(&mut self, yes: bool) -> &mut RegexSetBuilder {$/;"	f
mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lazy.rs	/^        static mut $NAME: $crate::lazy::Lazy<$T> = $crate::lazy::Lazy(0 as *const $T, ONCE_INIT);$/;"	c
mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^static mut LOGGER: *const Log = &NopLogger;$/;"	c
mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^        static mut RUN: bool = false;$/;"	c
name	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn name(&self, name: &str) -> Option<Match<'t>> {$/;"	f
name	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn name(&self, name: &str) -> Option<Match<'t>> {$/;"	f
needs_dotstar	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    pub fn needs_dotstar(&self) -> bool {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    pub fn new() -> LogBuilder {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    pub fn new() -> Logger {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/regex.rs	/^    pub fn new(spec: &str) -> Result<Filter, String> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/string.rs	/^    pub fn new(spec: &str) -> Result<Filter, String> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn new() -> Options {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    pub fn new() -> Condvar {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub fn new(val: T) -> Mutex<T> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    pub fn new() -> Once {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^    pub fn new() -> RawMutex {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_remutex.rs	/^    pub fn new() -> RawReentrantMutex {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn new() -> RawRwLock {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub fn new(val: T) -> ReentrantMutex<T> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn new(val: T) -> RwLock<T> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/stable.rs	/^    pub fn new(val: usize) -> AtomicUsize {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	pub fn new(string: &str) -> Cell {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn new() -> FormatBuilder {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn new() -> TableFormat {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn new(line: char, junc: char, ljunc: char, rjunc: char) -> LineSeparator {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn new() -> Table {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn new(cells: Vec<Cell>) -> Row {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/utils.rs	/^	pub fn new() -> StringWriter {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^    pub fn new(_prog: &Program) -> Self {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn new() -> Self {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn new(size: usize) -> Self {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn new(num_byte_classes: usize) -> Transitions {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    pub fn new(prog: &Program) -> Self {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn new(ro: &ExecReadOnly) -> Self {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn new(re: &str) -> Self {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn new(s: &'t [u8]) -> CharInput<'t> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn new(text: &'t [u8], only_utf8: bool) -> ByteInput<'t> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn new() -> SingleByteSet {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn new(lits: &syntax::Literals, sset: SingleByteSet) -> Self {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn new(lits: syntax::Literals, matcher: Matcher) -> Self {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn new(pat: Vec<u8>) -> SingleSearch {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^    fn new() -> Self {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^    pub fn new(_prog: &Program) -> Self {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn new(pattern: &str) -> RegexBuilder {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn new<I, S>(patterns: I) -> RegexSetBuilder$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn new(haystack: &'t [u8], start: usize, end: usize) -> Match<'t> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn new(re: &str) -> Result<Regex, Error> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    pub fn new<I, S>(exprs: I) -> Result<RegexSet, Error>$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn new(haystack: &'t str, start: usize, end: usize) -> Match<'t> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn new(re: &str) -> Result<Regex, Error> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn new() -> Mask {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn new(n: usize) -> Masks {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    pub fn new(pats: &syntax::Literals) -> Option<Teddy> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_fallback/teddy128.rs	/^    pub fn new(_pats: &syntax::Literals) -> Option<Teddy> { None }$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/sparse.rs	/^    pub fn new(size: usize) -> SparseSet {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    pub fn new(out: T) -> Option<TerminfoTerminal<T>> {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    pub fn new() -> Variables {$/;"	f
new	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    pub fn new(out: T) -> io::Result<WinConsole<T>> {$/;"	f
new	/home/oddcoder/projects/sickassembler/src/lib/basic_types/base_table.rs	/^    fn new(start_loc: u32, value: u32) -> BaseRange {$/;"	f
new	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn new(label: String, mnemonic: String, operands: UnitOrPair<AsmOperand>) -> Instruction {$/;"	f
new	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn new(op_t: OperandType, value: Value) -> AsmOperand {$/;"	f
new	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^    fn new(mnemonic: String,$/;"	f
new	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal.rs	/^    pub fn new(label: String, value: String, ext_name: String, addr: u32) -> Literal {$/;"	f
new	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol.rs	/^    pub fn new(name: &str, addr: i32, csect: &str) -> Symbol {$/;"	f
new	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn new() -> MasterTable {$/;"	f
new	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn new(csect: &str) -> CsectSymTab {$/;"	f
new	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn new(symbol: Symbol, sym_type: SymbolType) -> TableResult {$/;"	f
new	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^    pub fn new(path: String) -> FileHandler {$/;"	f
new_align	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	pub fn new_align(string: &str, align: Alignment) -> Cell {$/;"	f
new_many	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn new_many<I, S>(res: I) -> Self$/;"	f
new_options	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn new_options(opts: RegexOptions) -> Self {$/;"	f
new_simple	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn new_simple(mnemonic: String) -> Instruction {$/;"	f
new_with_terminfo	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    pub fn new_with_terminfo(out: T, terminfo: TermInfo) -> TerminfoTerminal<T> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn next(&mut self) -> Option<&'a Cell> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn next(&mut self) -> Option<&'a mut Cell> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn next(&self, si: StatePtr, cls: usize) -> StatePtr {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pattern.rs	/^    fn next(&mut self) -> SearchStep {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn next(&mut self) -> Option<&'t [u8]> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Captures<'t>> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Match<'t>> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Option<&'r str>> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Option<Match<'t>>> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    fn next(&mut self) -> Option<(usize, usize)> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    fn next(&mut self) -> Option<Locations> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    fn next(&mut self) -> Option<Option<(usize, usize)>> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn next(&mut self) -> Option<&'t str> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Captures<'t>> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Match<'t>> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Option<&'r str>> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Option<Match<'t>>> {$/;"	f
next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next_after_empty	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn next_after_empty(&self, _text: &[u8], i: usize) -> usize {$/;"	f
next_after_empty	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn next_after_empty(&self, text: &str, i: usize) -> usize {$/;"	f
next_after_empty	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_plugin.rs	/^    fn next_after_empty(&self, text: &str, i: usize) -> usize {$/;"	f
next_after_empty	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    fn next_after_empty(&self, text: &Self::Text, i: usize) -> usize;$/;"	f
next_back	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    fn next_back(&mut self) -> Option<usize> {$/;"	f
next_char	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char { (**self).next_char(at) }$/;"	f
next_char	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char {$/;"	f
next_char	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char;$/;"	f
next_pos	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn next_pos(&self) -> usize {$/;"	f
next_si	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    unsafe fn next_si(&self, si: StatePtr, text: &[u8], i: usize) -> StatePtr {$/;"	f
next_state	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn next_state($/;"	f
next_unchecked	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    unsafe fn next_unchecked(&self, si: StatePtr, cls: usize) -> StatePtr {$/;"	f
next_utf8	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^pub fn next_utf8(text: &[u8], i: usize) -> usize {$/;"	f
nfa	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn nfa(mut self) -> Self {$/;"	f
no_colsep	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn no_colsep() {$/;"	f
no_expansion	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn no_expansion<'r>(&'r mut self) -> Option<Cow<'r, [u8]>> {$/;"	f
no_expansion	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn no_expansion<'r>(&'r mut self) -> Option<Cow<'r, str>> {$/;"	f
no_linesep	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn no_linesep() {$/;"	f
no_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn no_match() {$/;"	f
notify_all	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    fn notify_all() {$/;"	f
notify_all	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    pub fn notify_all(&self) {$/;"	f
notify_all_slow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    fn notify_all_slow(&self) {$/;"	f
notify_one	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    fn notify_one() {$/;"	f
notify_one	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    pub fn notify_one(&self) {$/;"	f
notify_one_slow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    fn notify_one_slow(&self) {$/;"	f
num_byte_classes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn num_byte_classes(&self) -> usize {$/;"	f
num_chars	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    pub fn num_chars(&self) -> usize {$/;"	f
num_states	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn num_states(&self) -> usize {$/;"	f
numfnames	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/names.rs	/^pub static numfnames: &'static [&'static str] = &["columns",$/;"	c
numnames	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/names.rs	/^pub static numnames: &'static [&'static str] =$/;"	c
ok_or	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^fn ok_or<T, E>(t: Option<T>, e: E) -> Result<T, E> {$/;"	f
only_utf8	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    pub fn only_utf8(mut self, yes: bool) -> Self {$/;"	f
only_utf8	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn only_utf8(mut self, yes: bool) -> Self {$/;"	f
only_utf8	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    pub fn only_utf8(&self) -> bool {$/;"	f
opt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn opt(&mut self, short_name: &str, long_name: &str, desc: &str,$/;"	f
opt_count	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn opt_count(&self, nm: &str) -> usize {$/;"	f
opt_default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn opt_default(&self, nm: &str, def: &str) -> Option<String> {$/;"	f
opt_present	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn opt_present(&self, nm: &str) -> bool {$/;"	f
opt_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn opt_str(&self, nm: &str) -> Option<String> {$/;"	f
opt_strs	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn opt_strs(&self, nm: &str) -> Vec<String> {$/;"	f
opt_val	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn opt_val(&self, nm: &str) -> Option<Optval> {$/;"	f
opt_vals	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn opt_vals(&self, nm: &str) -> Vec<Optval> {$/;"	f
optflag	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn optflag(&mut self, short_name: &str, long_name: &str, desc: &str)$/;"	f
optflagmulti	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn optflagmulti(&mut self, short_name: &str, long_name: &str, desc: &str)$/;"	f
optflagopt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn optflagopt(&mut self, short_name: &str, long_name: &str, desc: &str,$/;"	f
optmulti	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn optmulti(&mut self, short_name: &str, long_name: &str, desc: &str, hint: &str)$/;"	f
optopt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn optopt(&mut self, short_name: &str, long_name: &str, desc: &str, hint: &str)$/;"	f
opts_present	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn opts_present(&self, names: &[String]) -> bool {$/;"	f
opts_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn opts_str(&self, names: &[String]) -> Option<String> {$/;"	f
output_to_file	/home/oddcoder/projects/sickassembler/src/lib/htme/raw_program.rs	/^    pub fn output_to_file(&self) {$/;"	f
p	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^        fn p(ips: Vec<u32>, flags: u8) -> bool {$/;"	f
p	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^        fn p(n: i32) -> bool {$/;"	f
p	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^        fn p(n: u32) -> bool {$/;"	f
p	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^        fn p(cp: char) -> bool {$/;"	f
p	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^        fn p(given_cp: char) -> bool {$/;"	f
padding	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn padding(&mut self, left: usize, right: usize) {$/;"	f
padding	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn padding(mut self, left: usize, right: usize) -> Self {$/;"	f
panic	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^mod panic {$/;"	m
panic_on_memory_limit	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^fn panic_on_memory_limit(disp: i32, locctr: i32) {$/;"	f
parse	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    pub fn parse(&mut self, filters: &str) -> &mut Self {$/;"	f
parse	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn parse<C: IntoIterator>(&self, args: C) -> Result$/;"	f
parse	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn parse(&self) -> Result<Parsed, Error> {$/;"	f
parse	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/compiled.rs	/^pub fn parse(file: &mut io::Read, longnames: bool) -> Result<TermInfo> {$/;"	f
parse_bytes	/home/oddcoder/projects/sickassembler/src/lib/operand_parsing.rs	/^fn parse_bytes(op: &str) -> Result<AsmOperand, String> {$/;"	f
parse_bytes	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^fn parse_bytes(instruction: &mut Instruction, text: &str) -> Result<String, String> {$/;"	f
parse_default	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn parse_default() {$/;"	f
parse_directive_operand	/home/oddcoder/projects/sickassembler/src/lib/operand_parsing.rs	/^pub fn parse_directive_operand(op: &str, instruction: &str) -> Result<AsmOperand, String> {$/;"	f
parse_end	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^fn parse_end(instruction: &Instruction,$/;"	f
parse_file	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^    pub fn parse_file(&mut self) -> Result<RawProgram, String> {$/;"	f
parse_hex	/home/oddcoder/projects/sickassembler/src/lib/operand_parsing.rs	/^fn parse_hex(op: &str) -> Result<AsmOperand, String> {$/;"	f
parse_instruction_operand	/home/oddcoder/projects/sickassembler/src/lib/operand_parsing.rs	/^pub fn parse_instruction_operand(op: &str) -> Result<AsmOperand, String> {$/;"	f
parse_label	/home/oddcoder/projects/sickassembler/src/lib/operand_parsing.rs	/^fn parse_label(op: &str, t: OperandType) -> Result<AsmOperand, String> {$/;"	f
parse_label	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^fn parse_label(instruction: &mut Instruction, lbl: &str) -> Result<String, String> {$/;"	f
parse_line_of_code	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^    fn parse_line_of_code(&mut self, mut words: Vec<String>) -> Option<(Instruction, AssemblyDef)> {$/;"	f
parse_literal	/home/oddcoder/projects/sickassembler/src/lib/operand_parsing.rs	/^fn parse_literal(op: &str) -> Result<AsmOperand, String> {$/;"	f
parse_logging_spec	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^fn parse_logging_spec(spec: &str) -> (Vec<LogDirective>, Option<filter::Filter>) {$/;"	f
parse_logging_spec_empty_log_level	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn parse_logging_spec_empty_log_level() {$/;"	f
parse_logging_spec_empty_with_filter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn parse_logging_spec_empty_with_filter() {$/;"	f
parse_logging_spec_global	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn parse_logging_spec_global() {$/;"	f
parse_logging_spec_invalid_crate	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn parse_logging_spec_invalid_crate() {$/;"	f
parse_logging_spec_invalid_crate_filter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn parse_logging_spec_invalid_crate_filter() {$/;"	f
parse_logging_spec_invalid_log_level	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn parse_logging_spec_invalid_log_level() {$/;"	f
parse_logging_spec_string_log_level	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn parse_logging_spec_string_log_level() {$/;"	f
parse_logging_spec_valid	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn parse_logging_spec_valid() {$/;"	f
parse_logging_spec_valid_filter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn parse_logging_spec_valid_filter() {$/;"	f
parse_memory_operand	/home/oddcoder/projects/sickassembler/src/lib/operand_parsing.rs	/^fn parse_memory_operand(op: &str) -> Result<AsmOperand, String> {$/;"	f
parse_operand	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^pub fn parse_operand(instruction: &mut Instruction, val: &Value) -> Result<String, String> {$/;"	f
parse_operands	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^fn parse_operands(operand_string: &str,$/;"	f
parse_ref_operands	/home/oddcoder/projects/sickassembler/src/lib/operand_parsing.rs	/^pub fn parse_ref_operands(ops: Vec<String>) -> AsmOperand {$/;"	f
parse_register	/home/oddcoder/projects/sickassembler/src/lib/operand_parsing.rs	/^fn parse_register(op: &str) -> Result<AsmOperand, String> {$/;"	f
parse_register	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^fn parse_register(operand: Register) -> Result<String, String> {$/;"	f
parse_signed_int	/home/oddcoder/projects/sickassembler/src/lib/operand_parsing.rs	/^fn parse_signed_int(op: &str) -> Result<AsmOperand, String> {$/;"	f
parse_signed_int	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^fn parse_signed_int(x: i32) -> Result<String, String> {$/;"	f
parse_start	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^fn parse_start(instruction: &Instruction, prog: &mut RawProgram) -> Result<i32, String> {$/;"	f
parse_str_operand	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^fn parse_str_operand(operand_match: String) -> String {$/;"	f
parser	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^pub mod parser {$/;"	m
parsing_style	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn parsing_style(&mut self, style: ParsingStyle) -> &mut Options {$/;"	f
partial_cmp	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn partial_cmp(&self, other: &LogLevel) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn partial_cmp(&self, other: &LogLevelFilter) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn partial_cmp(&self, other: &Char) -> Option<Ordering> {$/;"	f
partial_cmp	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn partial_cmp(&self, other: &char) -> Option<Ordering> {$/;"	f
pass_one	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^pub fn pass_one(prog_info: RawProgram) -> Result<(HashSet<Symbol>, RawProgram), String> {$/;"	f
pass_two	/home/oddcoder/projects/sickassembler/src/lib/pass_two/translator.rs	/^pub fn pass_two(prog: &mut RawProgram) -> Vec<String> {$/;"	f
patterns	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    pub fn patterns(&self) -> &[Vec<u8>] {$/;"	f
patterns	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_fallback/teddy128.rs	/^    pub fn patterns(&self) -> &[Vec<u8>] { &[] }$/;"	f
poison_bad	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    fn poison_bad() {$/;"	f
poisoned	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    pub fn poisoned(&self) -> bool {$/;"	f
pos	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    pub fn pos(&self) -> usize {$/;"	f
pos	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    pub fn pos(&self, i: usize) -> Option<(usize, usize)> {$/;"	f
pos	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn pos(&self, name: &str) -> Option<usize> {$/;"	f
prefix_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn prefix_at(&self, text: &[u8], at: usize) -> Option<usize> {$/;"	f
prefix_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn prefix_at($/;"	f
prefixes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn prefixes(lits: &syntax::Literals) -> Self {$/;"	f
prefixes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn prefixes(lits: &syntax::Literals) -> SingleByteSet {$/;"	f
prefixes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn prefixes(lits: syntax::Literals) -> Self {$/;"	f
previous_char	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char { (**self).previous_char(at) }$/;"	f
previous_char	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char {$/;"	f
previous_char	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char;$/;"	f
print	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	pub fn print<T: Write+?Sized>(&self, out: &mut T, idx: usize, col_width: usize, skip_right_fill: bool) -> Result<(), Error> {$/;"	f
print	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn print<T: Write+?Sized>(&self, out: &mut T, col_width: &[usize], colsep: bool, lborder: bool, rborder: bool) -> Result<(), Error> {$/;"	f
print	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn print<T: Write+?Sized>(&self, out: &mut T) -> Result<(), Error> {$/;"	f
print	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn print<T: Write+?Sized>(&self, out: &mut T, format: &TableFormat, col_width: &[usize]) -> Result<(), Error> {$/;"	f
print_align	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/utils.rs	/^pub fn print_align<T: Write+?Sized>(out: &mut T, align: Alignment, text: &str, fill: char, size: usize, skip_right_fill: bool) -> Result<(), Error> {$/;"	f
print_ascii	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	fn print_ascii() {$/;"	f
print_cjk	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	fn print_cjk() {$/;"	f
print_column_separator	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn print_column_separator<T: Write+?Sized>(&self, out: &mut T, pos: ColumnPosition) -> Result<(), Error> {$/;"	f
print_line_separator	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn print_line_separator<T: Write+?Sized>(&self, out: &mut T, col_width: &[usize], pos: LinePosition) -> Result<(), Error> {$/;"	f
print_term	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	pub fn print_term<T: Terminal+?Sized>(&self, out: &mut T, idx: usize, col_width: usize, skip_right_fill: bool) -> Result<(), Error> {$/;"	f
print_term	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn print_term<T: Terminal+?Sized>(&self, out: &mut T) -> Result<(), Error> {$/;"	f
print_term	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn print_term<T: Terminal+?Sized>(&self, out: &mut T, format: &TableFormat, col_width: &[usize]) -> Result<(), Error> {$/;"	f
print_tty	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn print_tty(&self, force_colorize: bool) {$/;"	f
print_unicode	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	fn print_unicode() {$/;"	f
printstd	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn printstd(&self) {$/;"	f
process_file	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^    fn process_file(&mut self) -> Option<Vec<String>> {$/;"	f
process_instructions	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^fn process_instructions(temp_instructions: Vec<Instruction>,$/;"	f
prop_decode_last_matches_std	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^    fn prop_decode_last_matches_std() {$/;"	f
prop_decode_matches_std	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^    fn prop_decode_matches_std() {$/;"	f
prop_encode_matches_std	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^    fn prop_encode_matches_std() {$/;"	f
prop_read_write_i32	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn prop_read_write_i32() {$/;"	f
prop_read_write_u32	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn prop_read_write_u32() {$/;"	f
prop_roundtrip	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^    fn prop_roundtrip() {$/;"	f
prop_roundtrip_last	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^    fn prop_roundtrip_last() {$/;"	f
prop_state_encode_decode	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn prop_state_encode_decode() {$/;"	f
ptable	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^macro_rules! ptable {$/;"	d
push_compiled	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn push_compiled(&mut self, inst: Inst) {$/;"	f
push_hole	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn push_hole(&mut self, inst: InstHole) -> Hole {$/;"	f
push_inst_ptr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^fn push_inst_ptr(data: &mut Vec<u8>, prev: &mut InstPtr, ip: InstPtr) {$/;"	f
push_split_hole	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn push_split_hole(&mut self) -> Hole {$/;"	f
raw_downgrade	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub unsafe fn raw_downgrade(&self) {$/;"	f
raw_lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub fn raw_lock(&self) {$/;"	f
raw_lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub fn raw_lock(&self) {$/;"	f
raw_program_tests	/home/oddcoder/projects/sickassembler/src/lib/htme/tests/raw_program_tests.rs	/^mod raw_program_tests {$/;"	m
raw_read	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn raw_read(&self) {$/;"	f
raw_try_lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub fn raw_try_lock(&self) -> bool {$/;"	f
raw_try_lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub fn raw_try_lock(&self) -> bool {$/;"	f
raw_try_read	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn raw_try_read(&self) -> bool {$/;"	f
raw_try_write	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn raw_try_write(&self) -> bool {$/;"	f
raw_unlock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub unsafe fn raw_unlock(&self) {$/;"	f
raw_unlock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub unsafe fn raw_unlock(&self) {$/;"	f
raw_unlock_fair	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub unsafe fn raw_unlock_fair(&self) {$/;"	f
raw_unlock_fair	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub unsafe fn raw_unlock_fair(&self) {$/;"	f
raw_unlock_read	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub unsafe fn raw_unlock_read(&self) {$/;"	f
raw_unlock_read_fair	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub unsafe fn raw_unlock_read_fair(&self) {$/;"	f
raw_unlock_write	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub unsafe fn raw_unlock_write(&self) {$/;"	f
raw_unlock_write_fair	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub unsafe fn raw_unlock_write_fair(&self) {$/;"	f
raw_write	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn raw_write(&self) {$/;"	f
read	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn read(&self) -> RwLockReadGuard<T> {$/;"	f
read_byte	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/compiled.rs	/^fn read_byte(r: &mut io::Read) -> io::Result<u8> {$/;"	f
read_captures_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn read_captures_at($/;"	f
read_captures_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn read_captures_at<'t>($/;"	f
read_captures_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_plugin.rs	/^    fn read_captures_at<'t>($/;"	f
read_captures_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    fn read_captures_at($/;"	f
read_captures_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn read_captures_at<'t>($/;"	f
read_instruction	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^    fn read_instruction(&mut self, line: Vec<String>) -> Option<Instruction> {$/;"	f
read_le_u16	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/compiled.rs	/^fn read_le_u16(r: &mut io::Read) -> io::Result<u16> {$/;"	f
read_matches_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_set.rs	/^    pub fn read_matches_at($/;"	f
read_nonneg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/compiled.rs	/^    macro_rules! read_nonneg {$/;"	d
read_vari32	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^fn read_vari32(data: &[u8]) -> (i32, usize) {$/;"	f
read_varu32	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^fn read_varu32(data: &[u8]) -> (u32, usize) {$/;"	f
record_from_program_tests	/home/oddcoder/projects/sickassembler/src/lib/htme/tests/record_from_program_tests.rs	/^mod record_from_program_tests {$/;"	m
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^    static ref COUNT: usize = HASHMAP.len();$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^    static ref EXAMPLE: u8 = 42;$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^    static ref HASHMAP: HashMap<u32, &'static str> = {$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^    static ref NUMBER: u32 = times_two(21);$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^		pub static ref FORMAT_BORDERS_ONLY: TableFormat = FormatBuilder::new()$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^		pub static ref FORMAT_CLEAN: TableFormat = FormatBuilder::new()$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^		pub static ref FORMAT_DEFAULT: TableFormat = FormatBuilder::new()$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^		pub static ref FORMAT_NO_BORDER: TableFormat = FormatBuilder::new()$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^		pub static ref FORMAT_NO_BORDER_LINE_SEPARATOR: TableFormat = FormatBuilder::new()$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^		pub static ref FORMAT_NO_COLSEP: TableFormat = FormatBuilder::new()$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^		pub static ref FORMAT_NO_LINESEP: TableFormat = FormatBuilder::new()$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^		pub static ref FORMAT_NO_LINESEP_WITH_TITLE: TableFormat = FormatBuilder::new()$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^		pub static ref FORMAT_NO_TITLE: TableFormat = FormatBuilder::new()$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^		static ref EQU_PLUS_SEP: LineSeparator = LineSeparator::new('=', '+', '+', '+');$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^		static ref MINUS_PLUS_SEP: LineSeparator = LineSeparator::new('-', '+', '+', '+');$/;"	c
ref	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/lib.rs	/^        static ref RE: Regex = Regex::new("...").unwrap();$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/basic_types/base_table.rs	/^    static ref BASE_VEC:RwLock<Vec<BaseRange>> = RwLock::new(Vec::new());$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^    static ref ASSEMBLER_DIRECTIVES: HashMap<String,AssemblyDef > = {$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^    static ref INSTRUCTION_SET: HashMap<String,AssemblyDef > = {$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal_table.rs	/^    static ref LITERAL_TABLE: RwLock<HashSet<Literal>> = RwLock::new(HashSet::new());$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal_table.rs	/^    static ref LIT_ID: RwLock<u32> = RwLock::new(0);$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal_table.rs	/^    static ref LIT_REGEX:RegexSet = RegexSet::new(&[r"^=C'[[:alnum:]]+'$",$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/basic_types/literal_table.rs	/^    static ref TEMP_LITERALS: RwLock<HashSet<String>> = RwLock::new(HashSet::new());    $/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    static ref LOCK_DURATION: Duration = {Duration::from_millis(LOCK_DURATION_MILLIS)};$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    static ref MASTER_TABLE:Mutex<MasterTable> = Mutex::new(MasterTable::new());$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^    static ref CHAR_OPERAND_STREAM:Regex = Regex::new(r"^(C|c)'[[:alnum:]]+'$").unwrap();$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^    static ref COMMA_WHITESPACE_REGEX:Regex = Regex::new(r",\\s+").unwrap();$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^    static ref COMMENT_REGEX:Regex = Regex::new(r"\\.(\\s|.)+").unwrap();$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^    static ref DECIMAL_STREAM:Regex = Regex::new(r"^-?[[:digit:]]+$").unwrap();$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^    static ref HEX_OPERAND_STREAM:Regex = Regex::new(r"^(X|x)'[[:xdigit:]]+'$").unwrap();$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^    static ref HEX_STREAM:Regex = Regex::new(r"^[[:xdigit:]]+$").unwrap();$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^    static ref LABEL_STREAM:Regex = Regex::new(r"^[a-zA-Z_][a-zA-Z_0-9]*$").unwrap();$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^    static ref SPLIT_SOURCE_LINE_SPLIT_REGEX:Regex = Regex::new(r"(\\s+|\\n+|\\t+)").unwrap();$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^    static ref HEX_REGEX:Regex = Regex::new(r"^(x|X)'[0-9a-fA-F]+'").unwrap();$/;"	c
ref	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^    static ref STR_REGEX: Regex = Regex::new(r"^(c|C)'.+'").unwrap();$/;"	c
regex	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    pub fn regex(&self) -> &R {$/;"	f
regex_strings	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn regex_strings(&self) -> &[String] {$/;"	f
reject_invalid	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^    fn reject_invalid() {$/;"	f
reject_invalid_last	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^    fn reject_invalid_last() {$/;"	f
remove_cell	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn remove_cell(&mut self, index: usize) {$/;"	f
remove_literal_container	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^fn remove_literal_container(byte_operand: &mut String) {$/;"	f
remove_op_register_x	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn remove_op_register_x(&mut self) {$/;"	f
remove_row	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn remove_row(&mut self, index: usize) {$/;"	f
replace	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn replace<'t, R: Replacer>($/;"	f
replace	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn replace<'t, R: Replacer>($/;"	f
replace_all	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn replace_all<'t, R: Replacer>($/;"	f
replace_all	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn replace_all<'t, R: Replacer>($/;"	f
replace_append	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn replace_append(&mut self, _: &Captures, dst: &mut Vec<u8>) {$/;"	f
replace_append	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut Vec<u8>) {$/;"	f
replace_append	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut Vec<u8>);$/;"	f
replace_append	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn replace_append(&mut self, _: &Captures, dst: &mut String) {$/;"	f
replace_append	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut String) {$/;"	f
replace_append	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut String);$/;"	f
replacen	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn replacen<'t, R: Replacer>($/;"	f
replacen	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn replacen<'t, R: Replacer>($/;"	f
reqopt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn reqopt(&mut self, short_name: &str, long_name: &str, desc: &str, hint: &str)$/;"	f
reset	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn reset(&mut self) -> Result<()>;$/;"	f
reset	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn reset(&mut self) -> Result<()> {$/;"	f
reset	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    pub fn reset(&self, out: &mut io::Write) -> Result<()> {$/;"	f
reset	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn reset(&mut self) -> Result<()> {$/;"	f
reset_size	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn reset_size(&mut self) {$/;"	f
reset_style	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	fn reset_style() {$/;"	f
reset_style	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	pub fn reset_style(&mut self) {$/;"	f
resize	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^    fn resize(&mut self, num_insts: usize, ncaps: usize) {$/;"	f
resolve_base_directive	/home/oddcoder/projects/sickassembler/src/lib/pass_two/translator.rs	/^fn resolve_base_directive(instr: &Instruction) -> Result<(), String> {$/;"	f
resolve_exported	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn resolve_exported(&self, sym_name: &str) -> Result<&Symbol, String> {$/;"	f
resolve_imported	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn resolve_imported(&self, sym_name: &str, csect: &str) -> Result<&Symbol, String> {$/;"	f
resolve_incomplete_operands	/home/oddcoder/projects/sickassembler/src/lib/pass_two/translator.rs	/^fn resolve_incomplete_operands(instruction: &mut Instruction) -> Result<String, String> {$/;"	f
resolve_label	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn resolve_label(&mut self, sym_name: &str, csect: &str) -> Result<TableResult, String> {$/;"	f
resolve_opcode	/home/oddcoder/projects/sickassembler/src/lib/pass_two/translator.rs	/^fn resolve_opcode(instr: &Instruction) -> Result<u32, &str> {$/;"	f
restore_state	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn restore_state(&mut self, state: State) -> Option<StatePtr> {$/;"	f
reverse	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    pub fn reverse(mut self, yes: bool) -> Self {$/;"	f
reverse	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    pub fn reverse($/;"	f
row	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^macro_rules! row {$/;"	d
row_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn row_iter(&self) -> Iter<Row> {$/;"	f
row_iter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^    pub fn row_iter<'a>(&'a self) -> Iter<'a, Row> {$/;"	f
row_iter_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^    pub fn row_iter_mut<'a>(&'a mut self) -> IterMut<'a, Row> {$/;"	f
searcher	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn searcher(&self) -> ExecNoSync {$/;"	f
searcher_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn searcher_str(&self) -> ExecNoSyncStr {$/;"	f
send	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^        fn send<T: Send>(_: T) {}$/;"	f
send	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^        fn send<T: Send>(_: T) {}$/;"	f
separator	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn separator(&mut self, what: LinePosition, separator: LineSeparator) {$/;"	f
separator	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn separator(mut self, what: LinePosition, separator: LineSeparator) -> Self {$/;"	f
separators	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn separators(&mut self, what: &[LinePosition], separator: LineSeparator) {$/;"	f
separators	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/format.rs	/^	pub fn separators(mut self, what: &[LinePosition], separator: LineSeparator) -> Self {$/;"	f
set	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn set(&self, level: LogLevelFilter) {$/;"	f
set_address	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol.rs	/^    pub fn set_address(&mut self, addr: i32) {$/;"	f
set_base	/home/oddcoder/projects/sickassembler/src/lib/basic_types/base_table.rs	/^pub fn set_base(locctr: i32, value: i32) {$/;"	f
set_base_relative	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn set_base_relative(&mut self) {$/;"	f
set_cell	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/row.rs	/^	pub fn set_cell(&mut self, cell: Cell, column: usize) -> Result<(), &str> {$/;"	f
set_element	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn set_element(&mut self, element: &str, column: usize, row: usize) -> Result<(), &str> {$/;"	f
set_empty	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn set_empty(&mut self) {$/;"	f
set_format	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn set_format(&mut self, format: TableFormat) {$/;"	f
set_format	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn set_format(&mut self, instruction_format: Format) {$/;"	f
set_format	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^fn set_format(inst: &mut Instruction, instruction_def: AssemblyDef) {$/;"	f
set_logger	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub fn set_logger<M>(make_logger: M) -> Result<(), SetLoggerError>$/;"	f
set_logger_raw	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub unsafe fn set_logger_raw<M>(make_logger: M) -> Result<(), SetLoggerError>$/;"	f
set_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn set_match(&mut self) {$/;"	f
set_next	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn set_next(&mut self, si: StatePtr, cls: usize, next: StatePtr) {$/;"	f
set_non_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn set_non_match(self, at: usize) -> Result<T> {$/;"	f
set_pc_relative	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn set_pc_relative(&mut self) {$/;"	f
set_range	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn set_range(&mut self, start: u8, end: u8) {$/;"	f
set_titles	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn set_titles(&mut self, titles: Row) {$/;"	f
set_word	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn set_word(&mut self) {$/;"	f
set_word_boundary	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn set_word_boundary(&mut self) {$/;"	f
short_usage	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn short_usage(&self, program_name: &str) -> String {$/;"	f
shortest_dfa	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn shortest_dfa(&self, text: &[u8], start: usize) -> dfa::Result<usize> {$/;"	f
shortest_dfa_reverse_suffix	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn shortest_dfa_reverse_suffix($/;"	f
shortest_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn shortest_match(&self, text: &[u8]) -> Option<usize> {$/;"	f
shortest_match	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn shortest_match(&self, text: &str) -> Option<usize> {$/;"	f
shortest_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn shortest_match_at(&self, text: &[u8], start: usize) -> Option<usize> {$/;"	f
shortest_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn shortest_match_at(&self, text: &str, start: usize) -> Option<usize> {$/;"	f
shortest_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn shortest_match_at($/;"	f
shortest_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_plugin.rs	/^    fn shortest_match_at(&self, text: &str, start: usize) -> Option<usize> {$/;"	f
shortest_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    fn shortest_match_at($/;"	f
shortest_match_at	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn shortest_match_at($/;"	f
shortest_nfa	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn shortest_nfa(&self, text: &[u8], start: usize) -> Option<usize> {$/;"	f
shortest_nfa_type	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn shortest_nfa_type($/;"	f
should_exec	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^pub fn should_exec(num_insts: usize, text_len: usize) -> bool {$/;"	f
should_suffix_scan	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn should_suffix_scan(&self) -> bool {$/;"	f
show_state_ptr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^fn show_state_ptr(si: StatePtr) -> String {$/;"	f
shutdown_logger	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub fn shutdown_logger() -> Result<Box<Log>, ShutdownLoggerError> {$/;"	f
shutdown_logger_raw	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^pub fn shutdown_logger_raw() -> Result<*const Log, ShutdownLoggerError> {$/;"	f
simple_export	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn simple_export() {$/;"	f
simple_export_again	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn simple_export_again() {$/;"	f
simple_failing_export	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn simple_failing_export() {$/;"	f
simple_local_symbol	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^    fn simple_local_symbol() {$/;"	f
size_hint	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_limit	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    pub fn size_limit(mut self, size_limit: usize) -> Self {$/;"	f
size_limit	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn size_limit(&mut self, limit: usize) -> &mut RegexBuilder {$/;"	f
size_limit	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn size_limit(&mut self, limit: usize) -> &mut RegexSetBuilder {$/;"	f
skip	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    pub fn skip(&self, mut pc: usize) -> usize {$/;"	f
skip_right_fill	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/utils.rs	/^	fn skip_right_fill() {$/;"	f
slice	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn slice(&'a self, arg: E) -> Self::Output {$/;"	f
slice	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn slice(&'a self, arg: E) -> Self::Output;$/;"	f
slices	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn slices() {$/;"	f
slots_len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn slots_len(&self) -> usize { self.0.slots_len() }$/;"	f
slots_len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    fn slots_len(&self) -> usize {$/;"	f
slots_len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_plugin.rs	/^    fn slots_len(&self) -> usize {$/;"	f
slots_len	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    fn slots_len(&self) -> usize;$/;"	f
slow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn slow(&self, haystack: &[u8], pos: usize) -> Option<Match> {$/;"	f
smoke	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    fn smoke() {$/;"	f
smoke	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn smoke() {$/;"	f
smoke	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    fn smoke() {$/;"	f
smoke	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn smoke() {$/;"	f
smoke_once	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    fn smoke_once() {$/;"	f
some_helper_function	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/lib.rs	/^fn some_helper_function(text: &str) -> bool {$/;"	f
split	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn split<'r, 't>(&'r self, text: &'t [u8]) -> Split<'r, 't> {$/;"	f
split	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn split<'r, 't>(&'r self, text: &'t str) -> Split<'r, 't> {$/;"	f
splitn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn splitn<'r, 't>($/;"	f
splitn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn splitn<'r, 't>(&'r self, text: &'t str, limit: usize)$/;"	f
stampede_once	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    fn stampede_once() {$/;"	f
start	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_bytes.rs	/^    pub fn start(&self) -> usize {$/;"	f
start	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    pub fn start(&self) -> usize {$/;"	f
start_flags	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn start_flags(&self, text: &[u8], at: usize) -> (EmptyFlags, StateFlags) {$/;"	f
start_flags_reverse	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn start_flags_reverse($/;"	f
start_ptr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn start_ptr(&self, si: StatePtr) -> StatePtr {$/;"	f
start_state	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn start_state($/;"	f
state	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    pub fn state(&self) -> OnceState {$/;"	f
state	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn state(&self, si: StatePtr) -> &State {$/;"	f
state_heap_size	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn state_heap_size(&self) -> usize {$/;"	f
stderr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^pub fn stderr() -> Option<Box<StderrTerminal>> {$/;"	f
stdout	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^pub fn stdout() -> Option<Box<StdoutTerminal>> {$/;"	f
step	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^    fn step(&mut self, mut ip: InstPtr, mut at: InputAt) -> bool {$/;"	f
step	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/pikevm.rs	/^    fn step($/;"	f
store	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/stable.rs	/^    pub fn store(&self, val: usize, order: Ordering) {$/;"	f
string_from_object_code	/home/oddcoder/projects/sickassembler/src/lib/htme/record_string.rs	/^pub fn string_from_object_code(code: u32, string_width_in_bytes: u8) -> String {$/;"	f
string_writer	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/utils.rs	/^	fn string_writer() {$/;"	f
stringfnames	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/names.rs	/^pub static stringfnames: &'static [&'static str] = &["back_tab",$/;"	c
stringnames	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/names.rs	/^pub static stringnames: &'static [&'static str] =$/;"	c
style	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	pub fn style(&mut self, attr: Attr) {$/;"	f
style_spec	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	fn style_spec() {$/;"	f
style_spec	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	pub fn style_spec(mut self, spec: &str) -> Cell {$/;"	f
suffixes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn suffixes(lits: &syntax::Literals) -> Self {$/;"	f
suffixes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    fn suffixes(lits: &syntax::Literals) -> SingleByteSet {$/;"	f
suffixes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/literals.rs	/^    pub fn suffixes(lits: syntax::Literals) -> Self {$/;"	f
supports_attr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn supports_attr(&self, attr: Attr) -> bool;$/;"	f
supports_attr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn supports_attr(&self, attr: Attr) -> bool {$/;"	f
supports_attr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn supports_attr(&self, attr: Attr) -> bool {$/;"	f
supports_color	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn supports_color(&self) -> bool;$/;"	f
supports_color	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn supports_color(&self) -> bool {$/;"	f
supports_color	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn supports_color(&self) -> bool {$/;"	f
supports_reset	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/lib.rs	/^    fn supports_reset(&self) -> bool;$/;"	f
supports_reset	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn supports_reset(&self) -> bool {$/;"	f
supports_reset	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn supports_reset(&self) -> bool {$/;"	f
swap	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/stable.rs	/^    pub fn swap(&self, val: usize, order: Ordering) -> usize {$/;"	f
swap_greed	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn swap_greed(&mut self, yes: bool) -> &mut RegexBuilder {$/;"	f
swap_greed	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn swap_greed(&mut self, yes: bool) -> &mut RegexSetBuilder {$/;"	f
t	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn t(s: &str, i: usize, u: &[String]) {$/;"	f
table	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn table() {$/;"	f
table	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^macro_rules! table {$/;"	d
target	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn target(&self) -> &str {$/;"	f
term_error_to_io_error	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^fn term_error_to_io_error(te: ::term::Error) -> Error {$/;"	f
test	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^mod test {$/;"	m
test	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/compiled.rs	/^mod test {$/;"	m
test_aliases_long_and_short	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_aliases_long_and_short() {$/;"	f
test_args_with_equals	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_args_with_equals() {$/;"	f
test_base	/home/oddcoder/projects/sickassembler/src/lib/basic_types/base_table.rs	/^fn test_base() {$/;"	f
test_basic_setabf	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn test_basic_setabf() {$/;"	f
test_byte_operand_parsing	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^    fn test_byte_operand_parsing() {$/;"	f
test_combined	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_combined() {$/;"	f
test_comparison_ops	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn test_comparison_ops() {$/;"	f
test_conditionals	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn test_conditionals() {$/;"	f
test_conout	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^fn test_conout() {$/;"	f
test_cross_cmp	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^     fn test_cross_cmp() {$/;"	f
test_cross_eq	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^     fn test_cross_eq() {$/;"	f
test_error_trait	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^     fn test_error_trait() {$/;"	f
test_file_opening	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^    fn test_file_opening() {$/;"	f
test_format	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn test_format() {$/;"	f
test_free_argument_is_hyphen	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_free_argument_is_hyphen() {$/;"	f
test_get_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn test_get_mut() {$/;"	f
test_get_mut	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_get_mut() {$/;"	f
test_hex_digits_required	/home/oddcoder/projects/sickassembler/src/lib/htme/tests/formatting_tests.rs	/^    fn test_hex_digits_required() {$/;"	f
test_into_inner	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn test_into_inner() {$/;"	f
test_into_inner	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_into_inner() {$/;"	f
test_into_inner_drop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn test_into_inner_drop() {$/;"	f
test_into_inner_drop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_into_inner_drop() {$/;"	f
test_literal_def	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^    fn test_literal_def() {$/;"	f
test_literals	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^    fn test_literals() {$/;"	f
test_loglevel_from_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^     fn test_loglevel_from_str() {$/;"	f
test_loglevel_show	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^     fn test_loglevel_show() {$/;"	f
test_loglevelfilter_from_str	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^     fn test_loglevelfilter_from_str() {$/;"	f
test_loglevelfilter_show	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^     fn test_loglevelfilter_show() {$/;"	f
test_long_to_short	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_long_to_short() {$/;"	f
test_mixed_stop	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_mixed_stop() {$/;"	f
test_mixed_stop_hyphen	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_mixed_stop_hyphen() {$/;"	f
test_multi	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_multi() {$/;"	f
test_multiple_int_constants	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn test_multiple_int_constants() {$/;"	f
test_mutex_arc_access_in_unwind	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn test_mutex_arc_access_in_unwind() {$/;"	f
test_mutex_arc_condvar	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn test_mutex_arc_condvar() {$/;"	f
test_mutex_arc_nested	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn test_mutex_arc_nested() {$/;"	f
test_mutex_unsized	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn test_mutex_unsized() {$/;"	f
test_mutexguard_send	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn test_mutexguard_send() {$/;"	f
test_nospace	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_nospace() {$/;"	f
test_nospace_conflict	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_nospace_conflict() {$/;"	f
test_op_i	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn test_op_i() {$/;"	f
test_optflag	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optflag() {$/;"	f
test_optflag_long_arg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optflag_long_arg() {$/;"	f
test_optflag_missing	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optflag_missing() {$/;"	f
test_optflag_multi	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optflag_multi() {$/;"	f
test_optflag_short_arg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optflag_short_arg() {$/;"	f
test_optflagmulti_long1	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optflagmulti_long1() {$/;"	f
test_optflagmulti_long2	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optflagmulti_long2() {$/;"	f
test_optflagmulti_mix	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optflagmulti_mix() {$/;"	f
test_optflagmulti_short1	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optflagmulti_short1() {$/;"	f
test_optflagmulti_short2a	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optflagmulti_short2a() {$/;"	f
test_optflagmulti_short2b	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optflagmulti_short2b() {$/;"	f
test_optflagopt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optflagopt() {$/;"	f
test_optmulti	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optmulti() {$/;"	f
test_optmulti_missing	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optmulti_missing() {$/;"	f
test_optmulti_multi	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optmulti_multi() {$/;"	f
test_optmulti_no_arg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optmulti_no_arg() {$/;"	f
test_optopt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optopt() {$/;"	f
test_optopt_missing	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optopt_missing() {$/;"	f
test_optopt_multi	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optopt_multi() {$/;"	f
test_optopt_no_arg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_optopt_no_arg() {$/;"	f
test_param_stack_failure_conditions	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn test_param_stack_failure_conditions() {$/;"	f
test_parse_file	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^    fn test_parse_file() {$/;"	f
test_push_bad_param	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parm.rs	/^    fn test_push_bad_param() {$/;"	f
test_records_from_raw_program	/home/oddcoder/projects/sickassembler/src/lib/htme/tests/raw_program_tests.rs	/^    fn test_records_from_raw_program() {$/;"	f
test_reqopt	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_reqopt() {$/;"	f
test_reqopt_missing	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_reqopt_missing() {$/;"	f
test_reqopt_multi	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_reqopt_multi() {$/;"	f
test_reqopt_no_arg	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_reqopt_no_arg() {$/;"	f
test_resolve_op_code	/home/oddcoder/projects/sickassembler/src/lib/pass_two/translator.rs	/^    fn test_resolve_op_code() {$/;"	f
test_resolve_regs	/home/oddcoder/projects/sickassembler/src/lib/pass_two/translator.rs	/^    fn test_resolve_regs() {$/;"	f
test_rw_arc	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_rw_arc() {$/;"	f
test_rw_arc_access_in_unwind	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_rw_arc_access_in_unwind() {$/;"	f
test_rw_arc_no_poison_rr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_rw_arc_no_poison_rr() {$/;"	f
test_rw_arc_no_poison_rw	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_rw_arc_no_poison_rw() {$/;"	f
test_rw_arc_no_poison_wr	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_rw_arc_no_poison_wr() {$/;"	f
test_rw_arc_no_poison_ww	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_rw_arc_no_poison_ww() {$/;"	f
test_rwlock_downgrade	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_rwlock_downgrade() {$/;"	f
test_rwlock_try_write	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_rwlock_try_write() {$/;"	f
test_rwlock_unsized	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_rwlock_unsized() {$/;"	f
test_rwlockguard_send	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    fn test_rwlockguard_send() {$/;"	f
test_short_usage	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_short_usage() {$/;"	f
test_split_within	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^fn test_split_within() {$/;"	f
test_string_from_code	/home/oddcoder/projects/sickassembler/src/lib/htme/tests/formatting_tests.rs	/^    fn test_string_from_code() {$/;"	f
test_table	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^		fn test_table() -> Table {$/;"	f
test_text_record_from_program	/home/oddcoder/projects/sickassembler/src/lib/htme/tests/record_from_program_tests.rs	/^    fn test_text_record_from_program() {$/;"	f
test_to_log_level	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^     fn test_to_log_level() {$/;"	f
test_to_log_level_filter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^     fn test_to_log_level_filter() {$/;"	f
test_unicode_separators	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	fn test_unicode_separators() {$/;"	f
test_unrecognized_option	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_unrecognized_option() {$/;"	f
test_usage	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_usage() {$/;"	f
test_usage_description_multibyte_handling	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_usage_description_multibyte_handling() {$/;"	f
test_usage_description_wrapping	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_usage_description_wrapping() {$/;"	f
test_usage_long_only	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_usage_long_only() {$/;"	f
test_usage_short_only	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn test_usage_short_only() {$/;"	f
test_veclens	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/parser/compiled.rs	/^    fn test_veclens() {$/;"	f
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/utils.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/expand.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/utf8.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/projects/sickassembler/src/lib/basic_types/symbol_tables.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/projects/sickassembler/src/lib/pass_one/pass_one.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/projects/sickassembler/src/lib/pass_two/tests.rs	/^mod tests {$/;"	m
tests	/home/oddcoder/projects/sickassembler/src/lib/pass_two/translator.rs	/^mod tests {$/;"	m
text	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_trait.rs	/^    pub fn text(&self) -> &'t R::Text {$/;"	f
text	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_unicode.rs	/^    fn text(&self) -> &'t str {$/;"	f
text_record_from_program	/home/oddcoder/projects/sickassembler/src/lib/htme/record_string.rs	/^pub fn text_record_from_program(program: &Vec<(String, Instruction)>) -> String {$/;"	f
text_records	/home/oddcoder/projects/sickassembler/src/lib/htme/raw_program.rs	/^    pub fn text_records(&self) -> String {$/;"	f
timed_out	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    pub fn timed_out(&self) -> bool {$/;"	f
times_two	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.4/src/lib.rs	/^fn times_two(n: u32) -> u32 { n * 2 }$/;"	f
to	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^		fn to() {$/;"	f
to_ascii_uppercase	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    fn to_ascii_uppercase(c: u8) -> u8 {$/;"	f
to_csv	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn to_csv<W: Write>(&self, w: W) -> csv::Result<csv::Writer<W>> {$/;"	f
to_csv_writer	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn to_csv_writer<W: Write>(&self, mut writer: csv::Writer<W>) -> csv::Result<csv::Writer<W>> {$/;"	f
to_csv_writer	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn to_csv_writer<W: Write>(&self, writer: csv::Writer<W>) -> csv::Result<csv::Writer<W>> {$/;"	f
to_hex_string	/home/oddcoder/projects/sickassembler/src/lib/lib.rs	/^pub fn to_hex_string<T>(num: T) -> String$/;"	f
to_log_level	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn to_log_level(&self) -> Option<LogLevel> {$/;"	f
to_log_level_filter	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/lib.rs	/^    pub fn to_log_level_filter(&self) -> LogLevelFilter {$/;"	f
to_string	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    fn to_string(&self) -> String {$/;"	f
to_string	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	fn to_string(&self) -> String {$/;"	f
trace	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/macros.rs	/^macro_rules! trace {$/;"	d
trans	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^		fn trans() {$/;"	f
translate	/home/oddcoder/projects/sickassembler/src/lib/pass_two/translator.rs	/^fn translate(instruction: &mut Instruction) -> Result<String, String> {$/;"	f
translate_correct	/home/oddcoder/projects/sickassembler/src/lib/pass_two/translator.rs	/^    fn translate_correct() {$/;"	f
translate_literal	/home/oddcoder/projects/sickassembler/src/lib/pass_two/operand_translator.rs	/^pub fn translate_literal(literal: &str) -> String {$/;"	f
try_lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    fn try_lock() {$/;"	f
try_lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub fn try_lock(&self) -> Option<MutexGuard<T>> {$/;"	f
try_lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^    pub fn try_lock(&self) -> bool {$/;"	f
try_lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_remutex.rs	/^    pub fn try_lock(&self) -> bool {$/;"	f
try_lock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub fn try_lock(&self) -> Option<ReentrantMutexGuard<T>> {$/;"	f
try_lock_exclusive	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn try_lock_exclusive(&self) -> bool {$/;"	f
try_lock_exclusive_for	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn try_lock_exclusive_for(&self, timeout: Duration) -> bool {$/;"	f
try_lock_exclusive_until	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn try_lock_exclusive_until(&self, timeout: Instant) -> bool {$/;"	f
try_lock_for	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub fn try_lock_for(&self, timeout: Duration) -> Option<MutexGuard<T>> {$/;"	f
try_lock_for	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^    pub fn try_lock_for(&self, timeout: Duration) -> bool {$/;"	f
try_lock_for	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_remutex.rs	/^    pub fn try_lock_for(&self, timeout: Duration) -> bool {$/;"	f
try_lock_for	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub fn try_lock_for(&self, timeout: Duration) -> Option<ReentrantMutexGuard<T>> {$/;"	f
try_lock_shared	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn try_lock_shared(&self) -> bool {$/;"	f
try_lock_shared_fast	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    fn try_lock_shared_fast(&self) -> bool {$/;"	f
try_lock_shared_for	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn try_lock_shared_for(&self, timeout: Duration) -> bool {$/;"	f
try_lock_shared_slow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn try_lock_shared_slow(&self) -> bool {$/;"	f
try_lock_shared_until	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn try_lock_shared_until(&self, timeout: Instant) -> bool {$/;"	f
try_lock_until	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub fn try_lock_until(&self, timeout: Instant) -> Option<MutexGuard<T>> {$/;"	f
try_lock_until	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^    pub fn try_lock_until(&self, timeout: Instant) -> bool {$/;"	f
try_lock_until	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_remutex.rs	/^    pub fn try_lock_until(&self, timeout: Instant) -> bool {$/;"	f
try_lock_until	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub fn try_lock_until(&self, timeout: Instant) -> Option<ReentrantMutexGuard<T>> {$/;"	f
try_read	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn try_read(&self) -> Option<RwLockReadGuard<T>> {$/;"	f
try_read_for	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn try_read_for(&self, timeout: Duration) -> Option<RwLockReadGuard<T>> {$/;"	f
try_read_until	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn try_read_until(&self, timeout: Instant) -> Option<RwLockReadGuard<T>> {$/;"	f
try_write	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn try_write(&self) -> Option<RwLockWriteGuard<T>> {$/;"	f
try_write_for	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn try_write_for(&self, timeout: Duration) -> Option<RwLockWriteGuard<T>> {$/;"	f
try_write_until	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn try_write_until(&self, timeout: Instant) -> Option<RwLockWriteGuard<T>> {$/;"	f
trylock_works	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    fn trylock_works() {$/;"	f
two_mutexes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    fn two_mutexes() {$/;"	f
two_mutexes_disjoint	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    fn two_mutexes_disjoint() {$/;"	f
u32_to_usize	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^fn u32_to_usize(n: u32) -> usize {$/;"	f
u8_class	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^    fn u8_class(&self, b: u8) -> usize {$/;"	f
unchecked_unwrap	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/util.rs	/^    unsafe fn unchecked_unwrap(self) -> T {$/;"	f
unchecked_unwrap	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/util.rs	/^    unsafe fn unchecked_unwrap(self) -> T;$/;"	f
unicode	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/exec.rs	/^    pub fn unicode(mut self, yes: bool) -> Self {$/;"	f
unicode	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn unicode(&mut self, yes: bool) -> &mut RegexBuilder {$/;"	f
unicode	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/re_builder.rs	/^    pub fn unicode(&mut self, yes: bool) -> &mut RegexSetBuilder {$/;"	f
unlock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^    pub fn unlock(&self, force_fair: bool) {$/;"	f
unlock	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_remutex.rs	/^    pub fn unlock(&self, force_fair: bool) {$/;"	f
unlock_exclusive	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn unlock_exclusive(&self, force_fair: bool) {$/;"	f
unlock_exclusive_slow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    fn unlock_exclusive_slow(&self, force_fair: bool) {$/;"	f
unlock_fair	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/mutex.rs	/^    pub fn unlock_fair(self) {$/;"	f
unlock_fair	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/remutex.rs	/^    pub fn unlock_fair(self) {$/;"	f
unlock_fair	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn unlock_fair(self) {$/;"	f
unlock_shared	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    pub fn unlock_shared(&self, force_fair: bool) {$/;"	f
unlock_shared_slow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_rwlock.rs	/^    fn unlock_shared_slow(&self, force_fair: bool) {$/;"	f
unlock_slow	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/raw_mutex.rs	/^    fn unlock_slow(&self, force_fair: bool) {$/;"	f
unreachable	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/util.rs	/^unsafe fn unreachable() -> ! {$/;"	f
unset_titles	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/lib.rs	/^	pub fn unset_titles(&mut self) {$/;"	f
unwrap	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/compile.rs	/^    fn unwrap(self) -> Inst {$/;"	f
unwrap_operands	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction.rs	/^    pub fn unwrap_operands(&self) -> Vec<AsmOperand> {$/;"	f
unwrap_to_vec	/home/oddcoder/projects/sickassembler/src/lib/basic_types/unit_or_pair.rs	/^pub fn unwrap_to_vec<T>(u_or_p: &UnitOrPair<T>) -> Vec<T>$/;"	f
update_last	/home/oddcoder/projects/sickassembler/src/lib/basic_types/base_table.rs	/^fn update_last(locctr: u32) -> bool {$/;"	f
usage	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs	/^    pub fn usage(&self, brief: &str) -> String {$/;"	f
uses_bytes	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^    pub fn uses_bytes(&self) -> bool {$/;"	f
usize_to_u32	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/backtrack.rs	/^fn usize_to_u32(n: usize) -> u32 {$/;"	f
usize_to_u32	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^fn usize_to_u32(n: usize) -> u32 {$/;"	f
validate_directive_operands	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^    fn validate_directive_operands(&self, opr: &OperandType) -> bool {$/;"	f
validate_instruction_operands	/home/oddcoder/projects/sickassembler/src/lib/basic_types/instruction_set.rs	/^    fn validate_instruction_operands(&self,$/;"	f
validate_semantics	/home/oddcoder/projects/sickassembler/src/lib/semantics_validator.rs	/^pub fn validate_semantics(instr: &mut Instruction) -> Result<(), String> {$/;"	f
vb	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^fn vb(b: usize) -> String {$/;"	f
verify	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn verify($/;"	f
verify_bucket	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/simd_accel/teddy128.rs	/^    fn verify_bucket($/;"	f
visible_byte	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^        fn visible_byte(b: u8) -> String {$/;"	f
wait	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    pub fn wait<T: ?Sized>(&self, mutex_guard: &mut MutexGuard<T>) {$/;"	f
wait_for	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    fn wait_for() {$/;"	f
wait_for	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    pub fn wait_for<T: ?Sized>(&self,$/;"	f
wait_for_force_to_finish	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/once.rs	/^    fn wait_for_force_to_finish() {$/;"	f
wait_until	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    fn wait_until() {$/;"	f
wait_until	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    pub fn wait_until<T: ?Sized>(&self,$/;"	f
wait_until_internal	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/condvar.rs	/^    fn wait_until_internal(&self, mutex: &RawMutex, timeout: Option<Instant>) -> WaitTimeoutResult {$/;"	f
warn	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.7/src/macros.rs	/^macro_rules! warn {$/;"	d
with_goto	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/prog.rs	/^        fn with_goto(cur: usize, goto: usize, fmtd: String) -> String {$/;"	f
with_regex	/home/oddcoder/projects/sickassembler/src/lib/filehandler.rs	/^    fn with_regex() -> Vec<String> {$/;"	f
with_style	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/cell.rs	/^	pub fn with_style(mut self, attr: Attr) -> Cell {$/;"	f
write	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.4.0/src/rwlock.rs	/^    pub fn write(&self) -> RwLockWriteGuard<T> {$/;"	f
write	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.6.6/src/utils.rs	/^	fn write(&mut self, data: &[u8]) -> Result<usize, Error> {$/;"	f
write	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/terminfo/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.5/src/win.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write_vari32	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^fn write_vari32(data: &mut Vec<u8>, n: i32) {$/;"	f
write_varu32	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.1/src/dfa.rs	/^fn write_varu32(data: &mut Vec<u8>, mut n: u32) {$/;"	f
zero_level	/home/oddcoder/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.4.2/src/lib.rs	/^    fn zero_level() {$/;"	f
